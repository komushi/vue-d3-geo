{"version":3,"sources":["webpack:///docs/js/vendor.c274e7836f02871f7669.js","webpack:///./~/topojson/build/topojson.js","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js","webpack:///./~/d3/d3.js"],"names":["webpackJsonp","15","module","exports","__webpack_require__","global","factory","this","noop","transformAbsolute","transform","x0","y0","kx","scale","ky","dx","translate","dy","point","i","transformRelative","x1","Math","round","y1","reverse","array","n","t","j","length","bisect","a","x","lo","hi","mid","feature","topology","o","type","features","geometries","map","feature$1","f","id","properties","geometry","object","arc","points","pop","p","arcs","k","push","slice","absolute","line","ring","polygon","geometryType","coordinates","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","stitchArcs","ends","p1","p0","forEach","dp","flush","fragmentByEnd","fragmentByStart","start","end","stitchedArcs","fragments","emptyIndex","g","e","fg","concat","unshift","gf","mesh","meshArcs","apply","arguments","filter","geomsByArc","geom","geoms","cartesianTriangleArea","triangle","b","c","abs","area","merge","mergeArcs","objects","register","ring$$","polygonsByArc","polygons","components","_","component","neighbors","ki","indexesByArc","indexes","m","ij","ik","splice","compareArea","minAreaHeap","up","parent","down","r","l","child","size","heap","removed","remove","presimplify","triangleArea","update","relative","triangles","maxArea","Infinity","previous","next","version","Object","defineProperty","value","19","parentId","list","styles","newStyles","item","css","media","sourceMap","part","parts","2","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","default","options","render","staticRenderFns","_scopeId","hook","context","$vnode","ssrContext","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","functional","existing","beforeCreate","h","20","cssWithMappingToString","useSourceMap","content","cssMapping","btoa","sourceMapping","toComment","sources","source","sourceRoot","join","unescape","encodeURIComponent","JSON","stringify","toString","modules","mediaQuery","alreadyImportedModules","21","addStylesToDom","domStyle","stylesInDom","refs","addStyle","createStyleElement","styleElement","document","createElement","head","appendChild","obj","querySelector","ssrIdKey","isProduction","parentNode","removeChild","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","firstChild","hasDocument","DEBUG","Error","listToStyles","getElementsByTagName","navigator","test","userAgent","toLowerCase","_isProduction","_options","newList","mayRemove","textStore","replacement","Boolean","9","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","d3_ascending","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","right","d3_transposeLength","d","d3_range_integerScale","d3_class","ctor","key","prototype","enumerable","d3_Map","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","method","d3_vendorSymbol","name","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","listeners","on","listenerByName","listener","get","indexOf","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","getAttribute","lastIndex","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElementNS","createNS","d3_selectionRemove","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","min","format","hsl","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","d3_format_precision","ceil","log","LN10","d3_formatPrefix","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","z0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","pointRing","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","ax","ay","bx","by","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","P","N","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","d3_transformNormalize","kz","d3_transformDot","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","d3_arraySlice","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","FeatureCollection","Sphere","GeometryCollection","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","candidates","stack","childs","revalue","partition","pie","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined"],"mappings":"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","file":"docs/js/vendor.c274e7836f02871f7669.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 15:\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n/***/ }),\n\n/***/ 19:\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n\n/***/ 21:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(19)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n\n/***/ 9:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// docs/js/vendor.c274e7836f02871f7669.js","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/build/topojson.js\n// module id = 15\n// module chunks = 1","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 19\n// module chunks = 1","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 20\n// module chunks = 1","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 21\n// module chunks = 1","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 9\n// module chunks = 1"],"sourceRoot":""}