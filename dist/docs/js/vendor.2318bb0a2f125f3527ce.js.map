{"version":3,"sources":["webpack:///docs/js/vendor.2318bb0a2f125f3527ce.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js","webpack:///./~/d3/d3.js","webpack:///./~/topojson/build/topojson.js"],"names":["webpackJsonp","0","module","exports","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","type","default","options","render","staticRenderFns","_scopeId","hook","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","functional","existing","beforeCreate","h","concat","23","parentId","list","styles","newStyles","i","length","item","id","css","media","sourceMap","part","parts","push","24","cssWithMappingToString","useSourceMap","content","cssMapping","btoa","sourceMapping","toComment","sources","map","source","sourceRoot","join","unescape","encodeURIComponent","JSON","stringify","toString","modules","mediaQuery","alreadyImportedModules","25","__webpack_require__","addStylesToDom","domStyle","stylesInDom","refs","j","addStyle","createStyleElement","styleElement","document","createElement","head","appendChild","obj","update","remove","querySelector","ssrIdKey","isProduction","noop","parentNode","removeChild","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","firstChild","hasDocument","DEBUG","Error","listToStyles","getElementsByTagName","navigator","test","userAgent","toLowerCase","_isProduction","_options","newList","mayRemove","textStore","replacement","filter","Boolean","4","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","c","classList","getAttribute","lastIndex","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElementNS","createNS","d3_selectionRemove","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","min","format","hsl","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","5","global","factory","transformAbsolute","transformRelative","topology","feature$1","absolute","geometryType","stitchArcs","ends","dp","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","gf","mesh","meshArcs","geomsByArc","geoms","cartesianTriangleArea","triangle","mergeArcs","objects","register","ring$$","polygonsByArc","components","component","ki","indexesByArc","ij","ik","compareArea","minAreaHeap","up","down","heap","removed","presimplify","triangleArea","relative","maxArea"],"mappings":"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","file":"docs/js/vendor.2318bb0a2f125f3527ce.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 0:\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 23:\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n\n/***/ 24:\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n\n/***/ 25:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(23)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// docs/js/vendor.2318bb0a2f125f3527ce.js","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 0\n// module chunks = 2","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 23\n// module chunks = 2","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 24\n// module chunks = 2","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 25\n// module chunks = 2","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 4\n// module chunks = 2","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/build/topojson.js\n// module id = 5\n// module chunks = 2"],"sourceRoot":""}