{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///lib/vue-d3-geo.min.js","webpack:///webpack/bootstrap 77cb66ebf9ee898034c7","webpack:///./src/components/D3GeoStatic.vue?a7da","webpack:///D3GeoStatic.vue","webpack:///./src/utils/findprop.js","webpack:///./~/d3/d3.js","webpack:///./~/topojson/build/topojson.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/components/D3GeoStatic.vue?d3fe"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","injectStyle","ssrContext","Component","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_d3__","__WEBPACK_IMPORTED_MODULE_1_topojson__","__WEBPACK_IMPORTED_MODULE_2__utils_findprop__","String","Number","mounted","layerObjects","colorRange","layerFeatureCode","layerFeatureName","featureNameStyle","svg","$el","append","attr","width","height","g","gLayer","gLabelLayer","console","log","center","projection","mercator","split","scale","translate","path","topojsonPath","error","json","layerFeatues","objects","features","mesh","a","b","color","linear","domain","length","interpolate","range","hgrads","selectAll","data","enter","style","grads","mouseover","mouseout","on","datum","centroid","text","__WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic__","__WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic___default","obj","args","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_transposeLength","d3_range_integerScale","k","d3_class","ctor","properties","key","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","listeners","listenerByName","listener","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","input","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","responseXML","undefined","global","noop","transformAbsolute","transformRelative","topology","feature$1","absolute","geometryType","stitchArcs","ends","dp","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","gf","meshArcs","geomsByArc","geoms","cartesianTriangleArea","triangle","mergeArcs","register","ring$$","polygonsByArc","components","component","ki","indexesByArc","ij","ik","compareArea","minAreaHeap","up","down","heap","removed","presimplify","triangleArea","relative","maxArea","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","options","render","staticRenderFns","_scopeId","hook","$vnode","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","functional","existing","beforeCreate","_vm","_h","$createElement","_self","_c"],"mappings":"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","file":"lib/vue-d3-geo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-d3-geo\"] = factory();\n\telse\n\t\troot[\"vue-d3-geo\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-d3-geo\"] = factory();\n\telse\n\t\troot[\"vue-d3-geo\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/vue-d3-geo/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(5)\n}\nvar Component = __webpack_require__(7)(\n  /* script */\n  __webpack_require__(1),\n  /* template */\n  __webpack_require__(8),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_topojson__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_topojson___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_topojson__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_findprop__ = __webpack_require__(3);\n//\n//\n//\n//\n//\n\n\n\n\n\nvar props = {\n  topojsonPath: {\n    type: String\n  },\n  width: {\n    type: Number,\n    default: 1000\n  },\n  height: {\n    type: Number,\n    default: 1000\n  },\n  colorRange: {\n    type: String,\n    default: '#0d47a1,#0e2fdf'\n  },\n  center: {\n    type: String,\n    default: '139.752268, 35.677043'\n  },\n  scale: {\n    type: Number,\n    default: 110000\n  },\n  layerObjects: {\n    type: String,\n    default: 'districts'\n  },\n  layerFeatureName: {\n    type: String,\n    default: 'properties.district'\n  },\n  layerFeatureCode: {\n    type: String,\n    default: 'properties.district_code'\n  },\n  featureNameStyle: {\n    type: String,\n    default: 'static'\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'd3-geo-static',\n  // props,\n  mounted: function mounted() {\n\n    var layerObjects = this.layerObjects;\n    var colorRange = this.colorRange;\n    var layerFeatureCode = this.layerFeatureCode;\n    var layerFeatureName = this.layerFeatureName;\n    var featureNameStyle = this.featureNameStyle;\n\n    var svg = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this.$el).append('svg').attr('width', this.width).attr('height', this.height);\n\n    var g = svg.append('g');\n    var gLayer = g.append(\"g\").attr(\"id\", this.layerObjects);\n    var gLabelLayer = g.append(\"g\").attr(\"id\", this.layerObjects + \"_label\");\n\n    console.log(\"this.center:\", this.center);\n\n    var projection = __WEBPACK_IMPORTED_MODULE_0_d3__[\"geo\"].mercator().center(this.center.split(\",\")).scale(this.scale).translate([this.width / 2, this.height / 2]);\n\n    var path = __WEBPACK_IMPORTED_MODULE_0_d3__[\"geo\"].path().projection(projection);\n\n    console.log(\"this.topojsonPath:\", this.topojsonPath);\n    __WEBPACK_IMPORTED_MODULE_0_d3__[\"json\"](this.topojsonPath, function (error, json) {\n      console.log(\"layerObjects:\", layerObjects);\n      var layerFeatues = __WEBPACK_IMPORTED_MODULE_1_topojson__[\"feature\"](json, json.objects[layerObjects]).features;\n      var mesh = __WEBPACK_IMPORTED_MODULE_1_topojson__[\"mesh\"](json, json.objects[layerObjects], function (a, b) {\n        return a !== b;\n      });\n\n      var color = __WEBPACK_IMPORTED_MODULE_0_d3__[\"scale\"].linear().domain([1, layerFeatues.length]).interpolate(__WEBPACK_IMPORTED_MODULE_0_d3__[\"interpolateHcl\"]).range(colorRange.split(\",\"));\n\n      // fill color gradient process\n      var hgrads = g.append(\"defs\").attr(\"id\", layerObjects + \"_hdef\").selectAll(\"radialGradient\").data(layerFeatues).enter().append(\"radialGradient\").attr(\"gradientUnits\", \"objectBoundingBox\").attr(\"fx\", \"50%\").attr(\"fy\", \"50%\").attr(\"cx\", \"50%\").attr(\"cy\", \"50%\").attr(\"r\", \"100%\").attr(\"id\", function (d) {\n        // return \"hgrad\" + d.id;\n        return \"hgrad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode);\n      });\n\n      hgrads.append(\"stop\").attr(\"offset\", \"0%\").style(\"stop-color\", \"white\").style(\"stop-opacity\", \"1\");\n\n      hgrads.append(\"stop\").attr(\"offset\", \"100%\").style(\"stop-color\", function (d, i) {\n        return color(i + 1);\n      }).style(\"stop-opacity\", \"1\");\n\n      var grads = g.append(\"defs\").attr(\"id\", layerObjects + \"_def\").selectAll(\"radialGradient\").data(layerFeatues).enter().append(\"radialGradient\").attr(\"gradientUnits\", \"objectBoundingBox\").attr(\"fx\", \"50%\").attr(\"fy\", \"50%\").attr(\"cx\", \"50%\").attr(\"cy\", \"50%\").attr(\"r\", \"35%\").attr(\"id\", function (d) {\n        // return \"grad\" + d.id;\n        return \"grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode);\n      });\n\n      grads.append(\"stop\").attr(\"offset\", \"0%\").style(\"stop-color\", function (d, i) {\n        return color(i + 1);\n      }).style(\"stop-opacity\", \".8\");\n\n      grads.append(\"stop\").attr(\"offset\", \"100%\").style(\"stop-color\", function (d, i) {\n        return color(i + 1);\n      }).style(\"stop-opacity\", \"1\");\n\n      if (featureNameStyle == 'static') {\n        var mouseover = function mouseover(p) {\n\n          __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).style(\"fill\", function (d) {\n            // return \"url(#hgrad\" + d.id + \")\";\n            return \"url(#hgrad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode) + \")\";\n          });\n        };\n\n        var mouseout = function mouseout(p) {\n\n          __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).style(\"fill\", function (d) {\n            // return \"url(#grad\" + d.id + \")\";\n            return \"url(#grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode) + \")\";\n          });\n        };\n\n        // polygons\n        gLayer.selectAll(\"path\").data(layerFeatues).enter().append(\"path\")\n        // .attr(\"class\", \"layer1\")\n        .attr(\"d\", path)\n        // .attr(\"fill\", function(d,i) { \n        //   return color(i + 1);\n        // })\n        .attr(\"fill\", function (d) {\n          // return \"url(#grad\" + d.id + \")\";\n          return \"url(#grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode) + \")\";\n        }).attr(\"layer-feature-code\", function (d) {\n          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode);\n        }).attr(\"layer-feature-name\", function (d) {\n          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureName);\n        }).on(\"mouseover\", mouseover).on(\"mouseout\", mouseout);\n\n        // border\n        gLayer.append(\"path\").datum(mesh).attr(\"d\", path).attr(\"class\", \"layer1-boundary\");\n\n        // Layer1 labels\n        gLabelLayer.selectAll(\"text\").data(layerFeatues).enter().append(\"text\").attr(\"class\", \"label\").attr(\"pointer-events\", \"none\").attr(\"transform\", function (d) {\n          return \"translate(\" + path.centroid(d) + \")\";\n        }).attr(\"dy\", \".35em\").text(function (d) {\n          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureName);\n        }).attr(\"layer-feature-code\", function (d) {\n          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode);\n        });\n      }\n    });\n  }\n});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic__);\n/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, \"D3GeoStatic\", function() { return __WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic___default.a; });\n\n// import D3GeoDoubleLayer from './components/D3GeoDoubleLayer'\n\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (obj, path) {\n\n    var args = path.split('.'),\n        i,\n        l;\n\n    for (i = 0, l = args.length; i < l; i++) {\n        if (!obj.hasOwnProperty(args[i])) return;\n        obj = obj[args[i]];\n    }\n\n    return obj;\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div')\n},staticRenderFns: []}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// lib/vue-d3-geo.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-d3-geo/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 77cb66ebf9ee898034c7","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b45b0ece\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./D3GeoStatic.vue\")\n}\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./D3GeoStatic.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b45b0ece\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./D3GeoStatic.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/D3GeoStatic.vue\n// module id = 0\n// module chunks = 0","<template>\n  <div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\nimport findprop from '../utils/findprop';\n\nconst props = {\n  topojsonPath: {\n    type: String\n  },\n  width: {\n    type: Number,\n    default: 1000\n  },\n  height: {\n    type: Number,\n    default: 1000\n  },\n  colorRange: {\n    type: String,\n    default: '#0d47a1,#0e2fdf'\n  },\n  center: {\n    type: String,\n    default: '139.752268, 35.677043'\n  },\n  scale: {\n    type: Number,\n    default: 110000\n  },\n  layerObjects: {\n    type: String,\n    default: 'districts'\n  },\n  layerFeatureName: {\n    type: String,\n    default: 'properties.district'\n  },\n  layerFeatureCode: {\n    type: String,\n    default: 'properties.district_code'\n  },\n  featureNameStyle: {\n    type: String,\n    default: 'static'\n  }\n};\n\nexport default {\n  name: 'd3-geo-static',\n  // props,\n  mounted() {\n\n    const layerObjects = this.layerObjects;\n    const colorRange = this.colorRange;\n    const layerFeatureCode = this.layerFeatureCode;\n    const layerFeatureName = this.layerFeatureName;\n    const featureNameStyle = this.featureNameStyle;\n    \n    const svg = d3.select(this.$el)\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    const g = svg.append('g');\n    const gLayer = g.append(\"g\").attr(\"id\", this.layerObjects);\n    const gLabelLayer = g.append(\"g\").attr(\"id\", this.layerObjects + \"_label\");\n\n    console.log(\"this.center:\", this.center);\n\n    const projection = d3.geo.mercator()\n      .center(this.center.split(\",\"))\n      .scale(this.scale)\n      .translate([this.width / 2, this.height / 2]);\n\n    const path = d3.geo.path().projection(projection);\n    \n\n    \n    \n\n    console.log(\"this.topojsonPath:\", this.topojsonPath);\n    d3.json(this.topojsonPath, function (error, json) {\n      console.log(\"layerObjects:\", layerObjects);\n      const layerFeatues = topojson.feature(json, json.objects[layerObjects]).features;\n      const mesh = topojson.mesh(json, json.objects[layerObjects], function(a, b) { return a !== b; });\n\n      const color = d3.scale.linear().domain([1,layerFeatues.length])\n                    .interpolate(d3.interpolateHcl)\n                    .range(colorRange.split(\",\"));\n\n      // fill color gradient process\n      const hgrads = g.append(\"defs\").attr(\"id\", layerObjects + \"_hdef\").selectAll(\"radialGradient\")\n        .data(layerFeatues)\n        .enter()\n        .append(\"radialGradient\")\n        .attr(\"gradientUnits\", \"objectBoundingBox\")\n        .attr(\"fx\", \"50%\")\n        .attr(\"fy\", \"50%\")\n        .attr(\"cx\", \"50%\")\n        .attr(\"cy\", \"50%\")\n        .attr(\"r\", \"100%\")\n        .attr(\"id\", function(d) { \n          // return \"hgrad\" + d.id;\n          return \"hgrad\" + findprop(d, layerFeatureCode);\n        });\n      \n      hgrads.append(\"stop\")\n          .attr(\"offset\", \"0%\")\n          .style(\"stop-color\", \"white\")\n          .style(\"stop-opacity\", \"1\");\n\n\n      hgrads.append(\"stop\")\n          .attr(\"offset\", \"100%\")\n          .style(\"stop-color\",  function(d, i) { \n            return color(i + 1); \n          })\n          .style(\"stop-opacity\", \"1\");\n\n      const grads = g.append(\"defs\").attr(\"id\", layerObjects + \"_def\").selectAll(\"radialGradient\")\n        .data(layerFeatues)\n        .enter()\n        .append(\"radialGradient\")\n        .attr(\"gradientUnits\", \"objectBoundingBox\")\n        .attr(\"fx\", \"50%\")\n        .attr(\"fy\", \"50%\")\n        .attr(\"cx\", \"50%\")\n        .attr(\"cy\", \"50%\")\n        .attr(\"r\", \"35%\")\n        .attr(\"id\", function(d) { \n          // return \"grad\" + d.id;\n          return \"grad\" + findprop(d, layerFeatureCode);\n        });\n\n      grads.append(\"stop\")\n          .attr(\"offset\", \"0%\")\n          .style(\"stop-color\",  function(d, i) { \n            return color(i + 1); \n          })\n          .style(\"stop-opacity\", \".8\");\n\n      grads.append(\"stop\")\n          .attr(\"offset\", \"100%\")\n          .style(\"stop-color\",  function(d, i) { \n            return color(i + 1); \n          })\n          .style(\"stop-opacity\", \"1\");\n\n      if (featureNameStyle == 'static') {\n        var mouseover = function(p) {\n\n          d3.select(this)\n            .style(\"fill\", function(d) {\n                // return \"url(#hgrad\" + d.id + \")\";\n                return \"url(#hgrad\" + findprop(d, layerFeatureCode) + \")\";\n            });\n\n        }\n        \n        var mouseout = function (p) {\n\n          d3.select(this)\n            .style(\"fill\", function(d) { \n              // return \"url(#grad\" + d.id + \")\";\n              return \"url(#grad\" + findprop(d, layerFeatureCode) + \")\";\n            });\n        }\n\n        // polygons\n        gLayer.selectAll(\"path\")\n          .data(layerFeatues)\n          .enter().append(\"path\")\n          // .attr(\"class\", \"layer1\")\n          .attr(\"d\", path)\n          // .attr(\"fill\", function(d,i) { \n          //   return color(i + 1);\n          // })\n          .attr(\"fill\", function(d) {\n              // return \"url(#grad\" + d.id + \")\";\n              return \"url(#grad\" + findprop(d, layerFeatureCode) + \")\";\n          })\n          .attr(\"layer-feature-code\", function(d) {\n            return findprop(d, layerFeatureCode);\n          })\n          .attr(\"layer-feature-name\", function(d) {\n            return findprop(d, layerFeatureName);\n          })\n          .on(\"mouseover\", mouseover)\n          .on(\"mouseout\", mouseout);\n\n        // border\n        gLayer.append(\"path\")\n          .datum(mesh)\n          .attr(\"d\", path)\n          .attr(\"class\", \"layer1-boundary\");\n\n        // Layer1 labels\n        gLabelLayer.selectAll(\"text\")\n          .data(layerFeatues)\n          .enter().append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"pointer-events\", \"none\")\n          .attr(\"transform\", function(d) { \n            return \"translate(\" + path.centroid(d) + \")\"; \n          })\n          .attr(\"dy\", \".35em\")\n          .text(function(d) { \n            return findprop(d, layerFeatureName); \n          })\n          .attr(\"layer-feature-code\", function(d) { \n            return findprop(d, layerFeatureCode);\n          });\n\n      } \n\n    });\n\n  }\n};\n</script>\n\n<style>\n@import url(//fonts.googleapis.com/earlyaccess/notosansjapanese.css);\n\nsvg {\n  font-size: 11px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 300;\n  margin: auto;\n  display: block;\n}\n\n.background {\n  fill: none;\n  pointer-events: all;\n}\n\n.circle {\n}\n\n.layer1 {\n  cursor: pointer;\n}\n\n\n.layer1:hover {\n  fill: orange;\n}\n\n.layer1.active {\n  display:none;\n}\n\n.layer1-boundary {\n  fill: none;\n  stroke: white;\n  stroke-dasharray: 2,2;\n  stroke-linejoin: round;\n  stroke-width: 1;\n}\n\n.layer1LegendTitle {\n  fill: black;\n  fill-opacity: 1;\n  font-size: 18px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 700;\n  text-anchor: middle;\n}\n\n.layer2 {\n  stroke: white;\n  stroke-width: 0.2;\n}\n\n.label {\n  fill: white;\n  fill-opacity: 1;\n  font-size: 18px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 700;\n  text-anchor: middle;\n  text-shadow:\n    2px 2px 0 #000,\n    -1px -1px 0 #000,  \n    1px -1px 0 #000,\n    -1px 1px 0 #000,\n     1px 1px 0 #000;\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// D3GeoStatic.vue?596c7806","export default (obj, path) => {\n\n    var args = path.split('.'), i, l;\n\n    for (i=0, l=args.length; i<l; i++) {\n        if (!obj.hasOwnProperty(args[i]))\n            return;\n        obj = obj[args[i]];\n    }\n\n    return obj;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/findprop.js","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 4\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/build/topojson.js\n// module id = 6\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 7\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div')\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-b45b0ece\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/D3GeoStatic.vue\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}