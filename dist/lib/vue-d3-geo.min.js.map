{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///lib/vue-d3-geo.min.js","webpack:///webpack/bootstrap 5ed60139b230de939a7a","webpack:///./src/components/D3GeoStatic.vue?a7da","webpack:///D3GeoStatic.vue","webpack:///./src/lib.js","webpack:///./~/d3/d3.js","webpack:///./~/topojson/build/topojson.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/components/D3GeoStatic.vue?d3fe"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","injectStyle","ssrContext","Component","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_d3__","__WEBPACK_IMPORTED_MODULE_1_topojson__","props","topojsonPath","type","String","width","Number","default","height","colorRange","center","scale","layerObjects","layerFeatureName","layerFeatureCode","featureNameStyle","mounted","findprop","svg","$el","append","attr","g","gLayer","gLabelLayer","console","log","projection","mercator","split","translate","path","error","json","layerFeatues","objects","features","mesh","a","b","color","linear","domain","length","interpolate","range","hgrads","selectAll","data","enter","style","grads","mouseover","mouseout","on","datum","centroid","text","methods","obj","args","__WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic__","__WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic___default","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_transposeLength","d3_range_integerScale","k","d3_class","ctor","properties","key","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","listeners","listenerByName","listener","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","input","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","responseXML","undefined","global","noop","transformAbsolute","transformRelative","topology","feature$1","absolute","geometryType","stitchArcs","ends","dp","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","gf","meshArcs","geomsByArc","geoms","cartesianTriangleArea","triangle","mergeArcs","register","ring$$","polygonsByArc","components","component","ki","indexesByArc","ij","ik","compareArea","minAreaHeap","up","down","heap","removed","presimplify","triangleArea","relative","maxArea","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","options","render","staticRenderFns","_scopeId","hook","$vnode","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","functional","existing","beforeCreate","_vm","_h","$createElement","_self","_c"],"mappings":"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","file":"lib/vue-d3-geo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-d3-geo\"] = factory();\n\telse\n\t\troot[\"vue-d3-geo\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-d3-geo\"] = factory();\n\telse\n\t\troot[\"vue-d3-geo\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/vue-d3-geo/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(4)\n}\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(1),\n  /* template */\n  __webpack_require__(7),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_topojson__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_topojson___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_topojson__);\n//\n//\n//\n//\n//\n\n\n\n\nvar props = {\n  // data: {\n  //   type: Array,\n  //   default: () => [],\n  // },\n  topojsonPath: {\n    type: String\n  },\n  width: {\n    type: Number,\n    default: 1000\n  },\n  height: {\n    type: Number,\n    default: 1000\n  },\n  colorRange: {\n    type: String,\n    default: '#0d47a1,#e3f2fd'\n  },\n  center: {\n    type: String,\n    default: '139.752268, 35.677043'\n  },\n  scale: {\n    type: Number,\n    default: 110000\n  },\n  layerObjects: {\n    type: String,\n    default: 'districts'\n  },\n  layerFeatureName: {\n    type: String,\n    default: 'properties.district'\n  },\n  layerFeatureCode: {\n    type: String,\n    default: 'properties.district_code'\n  },\n  featureNameStyle: {\n    type: String,\n    default: 'static'\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'd3-geo-staic',\n  // data() {\n  //   return {\n  //     data: [99, 71, 78, 25, 36, 92],\n  //     line: '',\n  //   };\n  // },\n  props: props,\n  mounted: function mounted() {\n\n    var layerObjects = this.layerObjects;\n    var colorRange = this.colorRange;\n    var layerFeatureCode = this.layerFeatureCode;\n    var layerFeatureName = this.layerFeatureName;\n    var featureNameStyle = this.featureNameStyle;\n    var findprop = this.findprop;\n\n    var svg = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this.$el).append('svg').attr('width', this.width).attr('height', this.height);\n\n    var g = svg.append('g');\n    var gLayer = g.append(\"g\").attr(\"id\", this.layerObjects);\n    var gLabelLayer = g.append(\"g\").attr(\"id\", this.layerObjects + \"_label\");\n\n    console.log(\"this.center:\", this.center);\n\n    var projection = __WEBPACK_IMPORTED_MODULE_0_d3__[\"geo\"].mercator().center(this.center.split(\",\")).scale(this.scale).translate([this.width / 2, this.height / 2]);\n\n    var path = __WEBPACK_IMPORTED_MODULE_0_d3__[\"geo\"].path().projection(projection);\n\n    console.log(\"this.topojsonPath:\", this.topojsonPath);\n    __WEBPACK_IMPORTED_MODULE_0_d3__[\"json\"](this.topojsonPath, function (error, json) {\n      console.log(\"layerObjects:\", layerObjects);\n      var layerFeatues = __WEBPACK_IMPORTED_MODULE_1_topojson__[\"feature\"](json, json.objects[layerObjects]).features;\n      var mesh = __WEBPACK_IMPORTED_MODULE_1_topojson__[\"mesh\"](json, json.objects[layerObjects], function (a, b) {\n        return a !== b;\n      });\n\n      var color = __WEBPACK_IMPORTED_MODULE_0_d3__[\"scale\"].linear().domain([1, layerFeatues.length]).interpolate(__WEBPACK_IMPORTED_MODULE_0_d3__[\"interpolateHcl\"]).range(colorRange.split(\",\"));\n\n      // fill color gradient process\n      var hgrads = g.append(\"defs\").attr(\"id\", layerObjects + \"_hdef\").selectAll(\"radialGradient\").data(layerFeatues).enter().append(\"radialGradient\").attr(\"gradientUnits\", \"objectBoundingBox\").attr(\"fx\", \"50%\").attr(\"fy\", \"50%\").attr(\"cx\", \"50%\").attr(\"cy\", \"50%\").attr(\"r\", \"100%\").attr(\"id\", function (d) {\n        // return \"hgrad\" + d.id;\n        return \"hgrad\" + findprop(d, layerFeatureCode);\n      });\n\n      hgrads.append(\"stop\").attr(\"offset\", \"0%\").style(\"stop-color\", \"white\").style(\"stop-opacity\", \"1\");\n\n      hgrads.append(\"stop\").attr(\"offset\", \"100%\").style(\"stop-color\", function (d, i) {\n        return color(i + 1);\n      }).style(\"stop-opacity\", \"1\");\n\n      var grads = g.append(\"defs\").attr(\"id\", layerObjects + \"_def\").selectAll(\"radialGradient\").data(layerFeatues).enter().append(\"radialGradient\").attr(\"gradientUnits\", \"objectBoundingBox\").attr(\"fx\", \"50%\").attr(\"fy\", \"50%\").attr(\"cx\", \"50%\").attr(\"cy\", \"50%\").attr(\"r\", \"35%\").attr(\"id\", function (d) {\n        // return \"grad\" + d.id;\n        return \"grad\" + findprop(d, layerFeatureCode);\n      });\n\n      grads.append(\"stop\").attr(\"offset\", \"0%\").style(\"stop-color\", function (d, i) {\n        return color(i + 1);\n      }).style(\"stop-opacity\", \".8\");\n\n      grads.append(\"stop\").attr(\"offset\", \"100%\").style(\"stop-color\", function (d, i) {\n        return color(i + 1);\n      }).style(\"stop-opacity\", \"1\");\n\n      if (featureNameStyle == 'static') {\n        var mouseover = function mouseover(p) {\n\n          __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).style(\"fill\", function (d) {\n            // return \"url(#hgrad\" + d.id + \")\";\n            return \"url(#hgrad\" + findprop(d, layerFeatureCode) + \")\";\n          });\n        };\n\n        var mouseout = function mouseout(p) {\n\n          __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).style(\"fill\", function (d) {\n            // return \"url(#grad\" + d.id + \")\";\n            return \"url(#grad\" + findprop(d, layerFeatureCode) + \")\";\n          });\n        };\n\n        // polygons\n        gLayer.selectAll(\"path\").data(layerFeatues).enter().append(\"path\")\n        // .attr(\"class\", \"layer1\")\n        .attr(\"d\", path)\n        // .attr(\"fill\", function(d,i) { \n        //   return color(i + 1);\n        // })\n        .attr(\"fill\", function (d) {\n          // return \"url(#grad\" + d.id + \")\";\n          return \"url(#grad\" + findprop(d, layerFeatureCode) + \")\";\n        }).attr(\"layer-feature-code\", function (d) {\n          return findprop(d, layerFeatureCode);\n        }).attr(\"layer-feature-name\", function (d) {\n          return findprop(d, layerFeatureName);\n        }).on(\"mouseover\", mouseover).on(\"mouseout\", mouseout);\n\n        // border\n        gLayer.append(\"path\").datum(mesh).attr(\"d\", path).attr(\"class\", \"layer1-boundary\");\n\n        // Layer1 labels\n        gLabelLayer.selectAll(\"text\").data(layerFeatues).enter().append(\"text\").attr(\"class\", \"label\").attr(\"pointer-events\", \"none\").attr(\"transform\", function (d) {\n          return \"translate(\" + path.centroid(d) + \")\";\n        }).attr(\"dy\", \".35em\").text(function (d) {\n          return findprop(d, layerFeatureName);\n        }).attr(\"layer-feature-code\", function (d) {\n          return findprop(d, layerFeatureCode);\n        });\n      }\n    });\n  },\n\n  methods: {\n    findprop: function findprop(obj, path) {\n\n      var args = path.split('.'),\n          i,\n          l;\n\n      for (i = 0, l = args.length; i < l; i++) {\n        if (!obj.hasOwnProperty(args[i])) return;\n        obj = obj[args[i]];\n      }\n\n      return obj;\n    }\n  }\n});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic___default.a);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div')\n},staticRenderFns: []}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// lib/vue-d3-geo.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-d3-geo/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5ed60139b230de939a7a","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b45b0ece\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"indentedSyntax\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./D3GeoStatic.vue\")\n}\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./D3GeoStatic.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b45b0ece\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./D3GeoStatic.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/D3GeoStatic.vue\n// module id = 0\n// module chunks = 0","<template>\n  <div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\n\nconst props = {\n  // data: {\n  //   type: Array,\n  //   default: () => [],\n  // },\n  topojsonPath: {\n    type: String\n  },\n  width: {\n    type: Number,\n    default: 1000\n  },\n  height: {\n    type: Number,\n    default: 1000\n  },\n  colorRange: {\n    type: String,\n    default: '#0d47a1,#e3f2fd'\n  },\n  center: {\n    type: String,\n    default: '139.752268, 35.677043'\n  },\n  scale: {\n    type: Number,\n    default: 110000\n  },\n  layerObjects: {\n    type: String,\n    default: 'districts'\n  },\n  layerFeatureName: {\n    type: String,\n    default: 'properties.district'\n  },\n  layerFeatureCode: {\n    type: String,\n    default: 'properties.district_code'\n  },\n  featureNameStyle: {\n    type: String,\n    default: 'static'\n  }\n};\n\nexport default {\n  name: 'd3-geo-staic',\n  // data() {\n  //   return {\n  //     data: [99, 71, 78, 25, 36, 92],\n  //     line: '',\n  //   };\n  // },\n  props,\n  mounted() {\n\n    const layerObjects = this.layerObjects;\n    const colorRange = this.colorRange;\n    const layerFeatureCode = this.layerFeatureCode;\n    const layerFeatureName = this.layerFeatureName;\n    const featureNameStyle = this.featureNameStyle;\n    const findprop = this.findprop;\n\n\n    const svg = d3.select(this.$el)\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    const g = svg.append('g');\n    const gLayer = g.append(\"g\").attr(\"id\", this.layerObjects);\n    const gLabelLayer = g.append(\"g\").attr(\"id\", this.layerObjects + \"_label\");\n\n    console.log(\"this.center:\", this.center);\n\n    const projection = d3.geo.mercator()\n      .center(this.center.split(\",\"))\n      .scale(this.scale)\n      .translate([this.width / 2, this.height / 2]);\n\n    const path = d3.geo.path().projection(projection);\n    \n\n    \n    \n\n    console.log(\"this.topojsonPath:\", this.topojsonPath);\n    d3.json(this.topojsonPath, function (error, json) {\n      console.log(\"layerObjects:\", layerObjects);\n      const layerFeatues = topojson.feature(json, json.objects[layerObjects]).features;\n      const mesh = topojson.mesh(json, json.objects[layerObjects], function(a, b) { return a !== b; });\n\n      const color = d3.scale.linear().domain([1,layerFeatues.length])\n                    .interpolate(d3.interpolateHcl)\n                    .range(colorRange.split(\",\"));\n\n      // fill color gradient process\n      const hgrads = g.append(\"defs\").attr(\"id\", layerObjects + \"_hdef\").selectAll(\"radialGradient\")\n        .data(layerFeatues)\n        .enter()\n        .append(\"radialGradient\")\n        .attr(\"gradientUnits\", \"objectBoundingBox\")\n        .attr(\"fx\", \"50%\")\n        .attr(\"fy\", \"50%\")\n        .attr(\"cx\", \"50%\")\n        .attr(\"cy\", \"50%\")\n        .attr(\"r\", \"100%\")\n        .attr(\"id\", function(d) { \n          // return \"hgrad\" + d.id;\n          return \"hgrad\" + findprop(d, layerFeatureCode);\n        });\n      \n      hgrads.append(\"stop\")\n          .attr(\"offset\", \"0%\")\n          .style(\"stop-color\", \"white\")\n          .style(\"stop-opacity\", \"1\");\n\n\n      hgrads.append(\"stop\")\n          .attr(\"offset\", \"100%\")\n          .style(\"stop-color\",  function(d, i) { \n            return color(i + 1); \n          })\n          .style(\"stop-opacity\", \"1\");\n\n      const grads = g.append(\"defs\").attr(\"id\", layerObjects + \"_def\").selectAll(\"radialGradient\")\n        .data(layerFeatues)\n        .enter()\n        .append(\"radialGradient\")\n        .attr(\"gradientUnits\", \"objectBoundingBox\")\n        .attr(\"fx\", \"50%\")\n        .attr(\"fy\", \"50%\")\n        .attr(\"cx\", \"50%\")\n        .attr(\"cy\", \"50%\")\n        .attr(\"r\", \"35%\")\n        .attr(\"id\", function(d) { \n          // return \"grad\" + d.id;\n          return \"grad\" + findprop(d, layerFeatureCode);\n        });\n\n      grads.append(\"stop\")\n          .attr(\"offset\", \"0%\")\n          .style(\"stop-color\",  function(d, i) { \n            return color(i + 1); \n          })\n          .style(\"stop-opacity\", \".8\");\n\n      grads.append(\"stop\")\n          .attr(\"offset\", \"100%\")\n          .style(\"stop-color\",  function(d, i) { \n            return color(i + 1); \n          })\n          .style(\"stop-opacity\", \"1\");\n\n      if (featureNameStyle == 'static') {\n        var mouseover = function(p) {\n\n          d3.select(this)\n            .style(\"fill\", function(d) {\n                // return \"url(#hgrad\" + d.id + \")\";\n                return \"url(#hgrad\" + findprop(d, layerFeatureCode) + \")\";\n            });\n\n        }\n        \n        var mouseout = function (p) {\n\n          d3.select(this)\n            .style(\"fill\", function(d) { \n              // return \"url(#grad\" + d.id + \")\";\n              return \"url(#grad\" + findprop(d, layerFeatureCode) + \")\";\n            });\n        }\n\n        // polygons\n        gLayer.selectAll(\"path\")\n          .data(layerFeatues)\n          .enter().append(\"path\")\n          // .attr(\"class\", \"layer1\")\n          .attr(\"d\", path)\n          // .attr(\"fill\", function(d,i) { \n          //   return color(i + 1);\n          // })\n          .attr(\"fill\", function(d) {\n              // return \"url(#grad\" + d.id + \")\";\n              return \"url(#grad\" + findprop(d, layerFeatureCode) + \")\";\n          })\n          .attr(\"layer-feature-code\", function(d) {\n            return findprop(d, layerFeatureCode);\n          })\n          .attr(\"layer-feature-name\", function(d) {\n            return findprop(d, layerFeatureName);\n          })\n          .on(\"mouseover\", mouseover)\n          .on(\"mouseout\", mouseout);\n\n        // border\n        gLayer.append(\"path\")\n          .datum(mesh)\n          .attr(\"d\", path)\n          .attr(\"class\", \"layer1-boundary\");\n\n        // Layer1 labels\n        gLabelLayer.selectAll(\"text\")\n          .data(layerFeatues)\n          .enter().append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"pointer-events\", \"none\")\n          .attr(\"transform\", function(d) { \n            return \"translate(\" + path.centroid(d) + \")\"; \n          })\n          .attr(\"dy\", \".35em\")\n          .text(function(d) { \n            return findprop(d, layerFeatureName); \n          })\n          .attr(\"layer-feature-code\", function(d) { \n            return findprop(d, layerFeatureCode);\n          });\n\n      } \n\n    });\n\n  },\n  methods: {\n    findprop(obj, path) {\n\n        var args = path.split('.'), i, l;\n\n        for (i=0, l=args.length; i<l; i++) {\n            if (!obj.hasOwnProperty(args[i]))\n                return;\n            obj = obj[args[i]];\n        }\n\n        return obj;\n    }\n  }\n};\n</script>\n\n<style lang=\"sass\">\n@import url(//fonts.googleapis.com/earlyaccess/notosansjapanese.css);\n\nsvg \n  font-size: 11px\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo'\n  font-weight: 300\n  margin: auto\n  display: block\n\n.background \n  fill: none\n  pointer-events: all\n\n.circle \n\n.layer1 \n  cursor: pointer\n\n.layer1:hover \n  fill: orange\n\n\n.layer1.active\n  display:none\n\n\n.layer1-boundary\n  fill: none\n  stroke: white\n  stroke-dasharray: 2,2\n  stroke-linejoin: round\n  stroke-width: 1\n\n\n.layer1LegendTitle \n  fill: black\n  fill-opacity: 1\n  font-size: 18px\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo'\n  font-weight: 700\n  text-anchor: middle\n\n\n.layer2 \n  stroke: white\n  stroke-width: 0.2\n\n.label \n  fill: white\n  fill-opacity: 1\n  font-size: 18px\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo'\n  font-weight: 700\n  text-anchor: middle\n  text-shadow: 2px 2px 0 #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000\n</style>\n\n<!--\n<style>\n@import url(//fonts.googleapis.com/earlyaccess/notosansjapanese.css);\n\nsvg {\n  font-size: 11px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 300;\n  margin: auto;\n  display: block;\n}\n\n.background {\n  fill: none;\n  pointer-events: all;\n}\n\n.circle {\n}\n\n.layer1 {\n  cursor: pointer;\n}\n\n\n.layer1:hover {\n  fill: orange;\n}\n\n.layer1.active {\n  display:none;\n}\n\n.layer1-boundary {\n  fill: none;\n  stroke: white;\n  stroke-dasharray: 2,2;\n  stroke-linejoin: round;\n  stroke-width: 1;\n}\n\n.layer1LegendTitle {\n  fill: black;\n  fill-opacity: 1;\n  font-size: 18px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 700;\n  text-anchor: middle;\n}\n\n.layer2 {\n  stroke: white;\n  stroke-width: 0.2;\n}\n\n.label {\n  fill: white;\n  fill-opacity: 1;\n  font-size: 18px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 700;\n  text-anchor: middle;\n  text-shadow:\n    2px 2px 0 #000,\n    -1px -1px 0 #000,  \n    1px -1px 0 #000,\n    -1px 1px 0 #000,\n     1px 1px 0 #000;\n}\n</style>\n-->\n\n\n// WEBPACK FOOTER //\n// D3GeoStatic.vue?ecf2a9d6","import vueD3Geo from './components/D3GeoStatic'\n\nexport default vueD3Geo\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib.js","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 3\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/build/topojson.js\n// module id = 5\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 6\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div')\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-b45b0ece\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/D3GeoStatic.vue\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}