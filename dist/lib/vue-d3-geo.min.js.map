{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///lib/vue-d3-geo.min.js","webpack:///webpack/bootstrap 7fbcc3fd692133405afd","webpack:///./src/utils/findprop.js","webpack:///./~/d3/d3.js","webpack:///./~/topojson/build/topojson.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/components/D3GeoDoubleLayer.vue?9b69","webpack:///./src/components/D3GeoStatic.vue?a7da","webpack:///D3GeoDoubleLayer.vue","webpack:///D3GeoStatic.vue","webpack:///./src/components/D3GeoDoubleLayer.vue?1989","webpack:///./src/components/D3GeoStatic.vue?d3fe"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","obj","path","args","split","length","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_transposeLength","d3_range_integerScale","k","d3_class","ctor","properties","key","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","listeners","on","listenerByName","listener","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","global","noop","transformAbsolute","transformRelative","topology","feature$1","absolute","geometryType","stitchArcs","ends","dp","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","gf","mesh","meshArcs","geomsByArc","geoms","cartesianTriangleArea","triangle","mergeArcs","objects","register","ring$$","polygonsByArc","components","component","ki","indexesByArc","ij","ik","compareArea","minAreaHeap","up","down","heap","removed","presimplify","triangleArea","relative","maxArea","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","options","render","staticRenderFns","_scopeId","hook","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","functional","existing","beforeCreate","injectStyle","Component","__WEBPACK_IMPORTED_MODULE_0_d3__","__WEBPACK_IMPORTED_MODULE_1_topojson__","__WEBPACK_IMPORTED_MODULE_2__utils_findprop__","props","required","topojsonPath","height","colorRange","layer1Objects","layer2Objects","layer1FeatureName","layer1FeatureCode","layer2FeatureName","layer2FeatureCode","layer1EventData","layer2EventData","layer1EventCountTag","layer1LegendTitle","onReceiveEvents","onStopEvents","legendWidth","gLayer1","mounted","gLabelLayer1","gLayer2","vm","$emit","$el","gLabelLayer2","commonGrads","circleGrads","countPoints","getCountPoints","countScale","getCountScale","getBBox","legendsvg","xAxis","getXAxis","layer1Featues","layer2Featues","meshLayer1","initColor","hgrads","grads","mouseoverLayer1","mouseoutLayer1","layer2Clicked","mouseoverLayer2","mouseoutLayer2","layer1Clicked","watch","newData","oldData","visualizeLayer1Events","eventList","events","maxCount","colorScale","getColorScale","featureCode","element","sortValue","countRange","xScale","layerObjects","layerFeatureName","layerFeatureCode","featureNameStyle","gLayer","gLabelLayer","console","layerFeatues","mouseover","mouseout","__WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic__","__WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic___default","__WEBPACK_IMPORTED_MODULE_1__components_D3GeoDoubleLayer__","__WEBPACK_IMPORTED_MODULE_1__components_D3GeoDoubleLayer___default","_vm","_h","$createElement","_self","_c"],"mappings":"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7nUJ8jD,OR8nUI+O,QQ5nUJ,yBR8nUE9hD,OACE/Q,KQ7nUJujC,OR8nUIsvB,QQ5nUJ,MR8nUEsR,eACEnkE,KQ7nUJ8jD,OR8nUI+O,QQ5nUJ,aR8nUEuR,eACEpkE,KQ7nUJ8jD,OR8nUI+O,QQ5nUJ,UR8nUEwR,mBACErkE,KQ7nUJ8jD,OR8nUI+O,QQ5nUJ,uBR8nUEyR,mBACEtkE,KQ7nUJ8jD,OR8nUI+O,QQ5nUJ,4BR8nUE0R,mBACEvkE,KQ7nUJ8jD,OR8nUI+O,QQ5nUJ,oBR8nUE2R,mBACExkE,KQ7nUJ8jD,OR8nUI+O,QQ5nUJ,yBR8nUE4R,iBACEzkE,KQ7nUJzG,OR8nUIs5D,QQ5nUJ,MR8nUE6R,iBACE1kE,KQ7nUJ8jD,OR8nUI+O,QQ5nUJ,cR8nUE8R,qBACE3kE,KQ7nUJ8jD,OR8nUI+O,QQ5nUJ,gBR8nUE+R,mBACE5kE,KQ7nUJ8jD,OR8nUI+O,QQ5nUJ,gBR8nUEgS,iBACE7kE,KQ7nUJ8jD,OR8nUI+O,QQ5nUJ,qBR8nUEiS,cACE9kE,KQ7nUJ8jD,OR8nUI+O,QQ5nUJ,mBAEAz4D,GAAA,SR+nUEhB,KQ7nUF,sBR8nUE+K,KAAM,WACJ,OACE4gE,YQ7nUN,ER8nUMC,QAAS,WACP,YQ3nURlB,QRioUEmB,QAAS,WAgOP,QAAS7hD,KACP6nB,EAAOmH,QAAQ,UQ/+TrB,GRg/TMnH,EAAS04B,EAAyC,OQ9+TxD,MRg/TMz4D,EQ/+TN8gC,aAAAM,SACA,KAAAxpC,MAAA,eACA,SAAA0pC,KAAA,YAEA,IR8+TM04B,EAAatzB,UQ5+TnB,QACA5F,aAAAlpC,MAAA,UACA,SACAkpC,aAAAM,SACA,KAAAxpC,MAAA,eAEA,GRw+TMqiE,EAAQvzB,UQv+Td,QACA5F,aAAAlpC,MAAA,eACA,GAAAA,MAAA,UAEA,QRs+TMsiE,EAAGC,MQp+TTP,GRyvTI,GAAIlzD,GAAQpZ,KQhoUhBoZ,MRioUQqyD,EAASzrE,KQhoUjByrE,ORioUQE,EAAgB3rE,KQhoUxB2rE,cRioUQC,EAAgB5rE,KQhoUxB4rE,cRioUQF,EAAa1rE,KQhoUrB0rE,WRioUQI,EAAoB9rE,KQhoU5B8rE,kBR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","file":"lib/vue-d3-geo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-d3-geo\"] = factory();\n\telse\n\t\troot[\"vue-d3-geo\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-d3-geo\"] = factory();\n\telse\n\t\troot[\"vue-d3-geo\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/vue-d3-geo/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (obj, path) {\n\n    var args = path.split('.'),\n        i,\n        l;\n\n    for (i = 0, l = args.length; i < l; i++) {\n        if (!obj.hasOwnProperty(args[i])) return;\n        obj = obj[args[i]];\n    }\n\n    return obj;\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(9)\n}\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(6),\n  /* template */\n  __webpack_require__(11),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(10)\n}\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(7),\n  /* template */\n  __webpack_require__(12),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_topojson__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_topojson___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_topojson__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_findprop__ = __webpack_require__(0);\n//\n//\n//\n//\n//\n\n\n\n\n\nvar props = {\n  id: {\n    type: String,\n    required: true\n  },\n  topojsonPath: {\n    type: String\n  },\n  width: {\n    type: Number,\n    default: 1000\n  },\n  height: {\n    type: Number,\n    default: 1000\n  },\n  colorRange: {\n    type: String,\n    default: '#e3f2fd,#2196f3,#0d47a1'\n  },\n  center: {\n    type: String,\n    default: '139.752268, 35.677043'\n  },\n  scale: {\n    type: Number,\n    default: 110000\n  },\n  layer1Objects: {\n    type: String,\n    default: 'districts'\n  },\n  layer2Objects: {\n    type: String,\n    default: 'blocks'\n  },\n  layer1FeatureName: {\n    type: String,\n    default: 'properties.district'\n  },\n  layer1FeatureCode: {\n    type: String,\n    default: 'properties.district_code'\n  },\n  layer2FeatureName: {\n    type: String,\n    default: 'properties.block'\n  },\n  layer2FeatureCode: {\n    type: String,\n    default: 'properties.block_code'\n  },\n  layer1EventData: {\n    type: Object,\n    default: null\n  },\n  layer2EventData: {\n    type: String,\n    default: 'circleData'\n  },\n  layer1EventCountTag: {\n    type: String,\n    default: 'dropoffCount'\n  },\n  layer1LegendTitle: {\n    type: String,\n    default: '３０分以内の降車イベント'\n  },\n  onReceiveEvents: {\n    type: String,\n    default: 'subTaxiEventsFrom'\n  },\n  onStopEvents: {\n    type: String,\n    default: 'unsubTaxiEvents'\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'd3-geo-double-layer',\n  data: function data() {\n    return {\n      legendWidth: 0,\n      gLayer1: function gLayer1() {\n        return {};\n      }\n    };\n  },\n\n  props: props,\n  mounted: function mounted() {\n    var width = this.width;\n    var height = this.height;\n    var layer1Objects = this.layer1Objects;\n    var layer2Objects = this.layer2Objects;\n    var colorRange = this.colorRange;\n    var layer1FeatureCode = this.layer1FeatureCode;\n    var layer1FeatureName = this.layer1FeatureName;\n    var layer2FeatureCode = this.layer2FeatureCode;\n    var layer2FeatureName = this.layer2FeatureName;\n    var layer1LegendTitle = this.layer1LegendTitle;\n    var onReceiveEvents = this.onReceiveEvents;\n    var onStopEvents = this.onStopEvents;\n    var vm = this;\n\n    var svg = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this.$el).append('svg').attr('width', width).attr('height', height);\n\n    svg.append(\"rect\").attr(\"class\", \"background\").attr(\"width\", width).attr(\"height\", height).on(\"click\", reset);\n\n    var g = svg.append('g');\n    var gLayer2 = g.append(\"g\").attr(\"id\", \"layer2\");\n    var gLayer1 = g.append(\"g\").attr(\"id\", \"layer1\");\n    // console.log(\"gLayer1\", gLayer1);\n    // this.gLayer1 = gLayer1;\n    // console.log(\"this.gLayer1\", this.gLayer1);\n    var gLabelLayer2 = g.append(\"g\").attr(\"id\", \"layer2_label\");\n    var gLabelLayer1 = g.append(\"g\").attr(\"id\", \"layer1_label\");\n\n    var projection = __WEBPACK_IMPORTED_MODULE_0_d3__[\"geo\"].mercator().center(this.center.split(\",\")).scale(this.scale).translate([width / 2, height / 2]);\n\n    var path = __WEBPACK_IMPORTED_MODULE_0_d3__[\"geo\"].path().projection(projection);\n\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////// adding common static gradients //////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    var commonGrads = g.append(\"defs\").attr(\"id\", \"common_grads_def\");\n\n    var circleGrads = commonGrads.append(\"radialGradient\").attr(\"gradientUnits\", \"objectBoundingBox\").attr(\"fx\", \"50%\").attr(\"fy\", \"50%\").attr(\"cx\", \"50%\").attr(\"cy\", \"50%\").attr(\"r\", \"35%\").attr(\"id\", \"circleGrad1\");\n\n    circleGrads.append(\"stop\").attr(\"offset\", \"0%\").style(\"stop-color\", \"white\").style(\"stop-opacity\", \"1\");\n\n    circleGrads.append(\"stop\").attr(\"offset\", \"100%\").style(\"stop-color\", function (d) {\n      return \"orange\";\n    }).style(\"stop-opacity\", \".6\");\n\n    ///////////////////////////////////////////////////////////////////////////\n    //////////////// Adding the initial gradient for the legend ///////////////\n    ///////////////////////////////////////////////////////////////////////////\n    var countPoints = this.getCountPoints(1, width, 10);\n    var countScale = this.getCountScale(1, width);\n\n    //Create the linearGradient\n    commonGrads.append(\"linearGradient\").attr(\"id\", \"legend-traffic\").attr(\"x1\", \"0%\").attr(\"y1\", \"0%\").attr(\"x2\", \"100%\").attr(\"y2\", \"0%\").selectAll(\"stop\").data(__WEBPACK_IMPORTED_MODULE_0_d3__[\"range\"](10)).enter().append(\"stop\").attr(\"offset\", function (d, i) {\n      return countScale(countPoints[i]) / width;\n    }).attr(\"stop-color\", function (d, i) {\n      return colorRange.split(\",\")[0];\n    });\n\n    ///////////////////////////////////////////////////////////////////////////\n    ////////////////////////// Draw the init legend ///////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    var gBox = g.node().getBBox();\n\n    this.legendWidth = Math.min(width * 0.8, 600);\n    //Color Legend container\n    var legendsvg = g.append(\"g\").attr(\"id\", \"legendWrapper\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height * 0.95 + \")\");\n\n    //Draw the Rectangle\n    legendsvg.append(\"rect\").attr(\"id\", \"legendRect\").attr(\"x\", -this.legendWidth / 2).attr(\"y\", 0).attr(\"width\", this.legendWidth).attr(\"height\", 10).style(\"fill\", \"url(#legend-traffic)\");\n\n    //Append title\n    legendsvg.append(\"text\").attr(\"class\", \"layer1LegendTitle\").attr(\"x\", 0).attr(\"y\", -10).style(\"text-anchor\", \"middle\").text(layer1LegendTitle);\n\n    //Define x-axis\n    var xAxis = this.getXAxis(this.legendWidth, 0);\n\n    //Set up X axis\n    legendsvg.append(\"g\").attr(\"id\", \"axis\").attr(\"transform\", \"translate(0,\" + 10 + \")\").call(xAxis);\n\n    // console.log(\"this.topojsonPath:\", this.topojsonPath);\n\n    __WEBPACK_IMPORTED_MODULE_0_d3__[\"json\"](this.topojsonPath, function (error, json) {\n      var vm = this;\n\n      var layer1Featues = __WEBPACK_IMPORTED_MODULE_1_topojson__[\"feature\"](json, json.objects[layer1Objects]).features;\n      var layer2Featues = __WEBPACK_IMPORTED_MODULE_1_topojson__[\"feature\"](json, json.objects[layer2Objects]).features;\n      var meshLayer1 = __WEBPACK_IMPORTED_MODULE_1_topojson__[\"mesh\"](json, json.objects[layer1Objects], function (a, b) {\n        return a !== b;\n      });\n\n      var initColor = colorRange.split(\",\")[0];\n\n      // fill color gradient process\n      var hgrads = g.append(\"defs\").attr(\"id\", \"layer1_hgrads\").selectAll(\"radialGradient\").data(layer1Featues).enter().append(\"radialGradient\").attr(\"gradientUnits\", \"objectBoundingBox\").attr(\"fx\", \"50%\").attr(\"fy\", \"50%\").attr(\"cx\", \"50%\").attr(\"cy\", \"50%\").attr(\"r\", \"100%\").attr(\"id\", function (d, i) {\n\n        return \"hgrad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode);\n        // return \"hgrad\" + (i + 1);\n      });\n\n      hgrads.append(\"stop\").attr(\"offset\", \"0%\").style(\"stop-color\", \"white\").style(\"stop-opacity\", \"1\");\n\n      hgrads.append(\"stop\").attr(\"offset\", \"100%\").style(\"stop-color\", function (d, i) {\n        return initColor;\n      }).style(\"stop-opacity\", \"1\");\n\n      var grads = g.append(\"defs\").attr(\"id\", \"layer1_grads\").selectAll(\"radialGradient\").data(layer1Featues).enter().append(\"radialGradient\").attr(\"gradientUnits\", \"objectBoundingBox\").attr(\"fx\", \"50%\").attr(\"fy\", \"50%\").attr(\"cx\", \"50%\").attr(\"cy\", \"50%\").attr(\"r\", \"35%\").attr(\"id\", function (d, i) {\n        return \"grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode);\n        // return \"grad\" + (i + 1);\n      });\n\n      grads.append(\"stop\").attr(\"offset\", \"0%\").style(\"stop-color\", function (d, i) {\n        return initColor;\n      }).style(\"stop-opacity\", \".7\");\n\n      grads.append(\"stop\").attr(\"offset\", \"100%\").style(\"stop-color\", function (d, i) {\n        return initColor;\n      }).style(\"stop-opacity\", \"1\");\n\n      var mouseoverLayer1 = function mouseoverLayer1(p) {\n        __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).style(\"fill\", function (d) {\n          return \"url(#hgrad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode) + \")\";\n        });\n      };\n\n      var mouseoutLayer1 = function mouseoutLayer1(p) {\n        __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).style(\"fill\", function (d) {\n          return \"url(#grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode) + \")\";\n        });\n      };\n\n      // layer2 polygons and boundary\n      gLayer2.selectAll(\"path\").data(layer2Featues).enter().append(\"path\").attr(\"d\", path).attr(\"fill\", function (d, i) {\n        return \"url(#grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode) + \")\";\n        // return \"#bbdefb\";\n      }).style(\"fill-opacity\", 0).style(\"display\", \"none\").attr(\"layer1-feature-code\", function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode);\n      }).attr(\"layer1-feature-name\", function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureName);\n      }).attr(\"layer2-feature-code\", function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer2FeatureCode);\n      }).attr(\"layer2-feature-name\", function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer2FeatureName);\n      }).attr(\"class\", \"layer2\").on(\"click\", layer2Clicked).on(\"mouseover\", mouseoverLayer2).on(\"mouseout\", mouseoutLayer2);\n\n      // Layer2 labels\n      gLabelLayer2.selectAll(\"text\").data(layer2Featues).enter().append(\"text\").attr(\"class\", \"label\").style(\"fill-opacity\", 0).style(\"display\", \"none\").attr(\"transform\", function (d) {\n        return \"translate(\" + path.centroid(d) + \")\";\n      }).attr(\"dy\", \".35em\").attr(\"pointer-events\", \"none\").text(function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer2FeatureName);\n      }).attr(\"layer2-feature-code\", function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer2FeatureCode);\n      });\n\n      // Layer1 polygons\n      // console.log(\"vm.gLayer1!!!!!!!!!!\", vm.gLayer1);\n      gLayer1.selectAll(\"path\").data(layer1Featues).enter().append(\"path\").attr(\"class\", \"layer1\").attr(\"d\", path).style(\"fill\", function (d, i) {\n        return \"url(#grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode) + \")\";\n      }).attr(\"layer1-feature-code\", function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode);\n      }).attr(\"layer1-feature-name\", function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureName);\n      }).on(\"click\", layer1Clicked).on(\"mouseover\", mouseoverLayer1).on(\"mouseout\", mouseoutLayer1);\n\n      // Layer1 border\n      gLayer1.append(\"path\").datum(meshLayer1).attr(\"d\", path).attr(\"class\", \"layer1-boundary\");\n\n      // Layer1 labels\n      gLabelLayer1.selectAll(\"text\").data(layer1Featues).enter().append(\"text\").attr(\"class\", \"label\").attr(\"transform\", function (d) {\n        return \"translate(\" + path.centroid(d) + \")\";\n      }).attr(\"dy\", \".35em\").attr(\"pointer-events\", \"none\").text(function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureName);\n      }).attr(\"layer1-feature-code\", function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode);\n      });\n    });\n\n    /***** click to zoom *****/\n    var active = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](null);\n\n    var layer2Clicked = function layer2Clicked(d) {\n      if (active.node()) {\n        if (this.getAttribute(\"layer1-feature-code\") == active.node().getAttribute(\"layer1-feature-code\")) {\n          return reset();\n        }\n      }\n    };\n\n    var layer1Clicked = function layer1Clicked(d) {\n      if (active.node() === this) {\n        return reset();\n      }\n\n      active.classed(\"active\", false);\n      active = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).classed(\"active\", true);\n\n      zoom(d);\n    };\n\n    var zoom = function zoom(d) {\n      var bounds = path.bounds(d),\n          dx = bounds[1][0] - bounds[0][0],\n          dy = bounds[1][1] - bounds[0][1],\n          x = (bounds[0][0] + bounds[1][0]) / 2,\n          y = (bounds[0][1] + bounds[1][1]) / 2,\n          scale = .9 / Math.max(dx / width, dy / height),\n          translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      g.transition().duration(750).style(\"stroke-width\", 1.5 / scale + \"px\").attr(\"transform\", \"translate(\" + translate + \")scale(\" + scale + \")\");\n\n      // hide layer1 labels\n      gLabelLayer1.selectAll('text').transition().style(\"fill-opacity\", 0).transition().style(\"display\", \"none\");\n\n      gLayer2.selectAll(\"path\").transition().style(\"fill-opacity\", 1).style(\"display\", \"block\");\n\n      // callback to notify the specified feature is ready to receive location events\n      var featureCode = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode);\n      // scope.onStopEvents();\n      // scope.onReceiveEvents({feature: featureCode});\n\n      vm.$emit(onReceiveEvents);\n      vm.$emit(onStopEvents);\n    };\n\n    function reset() {\n      active.classed(\"active\", false);\n      active = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](null);\n\n      g.transition().duration(750).style(\"stroke-width\", \"1.5px\").attr(\"transform\", \"\");\n\n      // show layer1 labels\n      gLabelLayer1.selectAll('text').transition().style(\"display\", \"block\").transition().duration(250).style(\"fill-opacity\", 1);\n\n      gLayer2.selectAll(\"path\").transition().style(\"fill-opacity\", 0).style(\"display\", \"none\");\n\n      // scope.onStopEvents();\n      vm.$emit(onStopEvents);\n    };\n    /***** click to zoom *****/\n\n    /***** hover *****/\n    var mouseoverLayer2 = function mouseoverLayer2(p) {\n      gLabelLayer2.selectAll(\"text\").filter(function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(p, layer2FeatureCode) == __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer2FeatureCode);\n      }).transition().style(\"fill-opacity\", 1).style(\"display\", \"block\");\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).style(\"fill\", function (d) {\n        return \"url(#hgrad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode) + \")\";\n      });\n    };\n\n    var mouseoutLayer2 = function mouseoutLayer2(p) {\n      gLabelLayer2.selectAll(\"text\").filter(function (d) {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(p, layer2FeatureCode) == __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer2FeatureCode);\n      }).transition().style(\"fill-opacity\", 0).transition().style(\"display\", \"none\");\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).style(\"fill\", function (d) {\n        return \"url(#grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layer1FeatureCode) + \")\";\n      });\n    };\n    /***** hover *****/\n  },\n\n  watch: {\n    layer1EventData: function layer1EventData(newData, oldData) {\n      // console.log(\"newData\", newData);\n      // console.log(\"oldData\", oldData);\n      this.visualizeLayer1Events(newData);\n    }\n  },\n  methods: {\n    visualizeLayer1Events: function visualizeLayer1Events(eventList) {\n      var vm = this;\n\n      var events = __WEBPACK_IMPORTED_MODULE_0_d3__[\"entries\"](eventList);\n      // console.log(\"events\", events);\n      var maxCount = __WEBPACK_IMPORTED_MODULE_0_d3__[\"max\"](events, function (d) {\n        // console.log(\"d\", d);\n        // console.log(\"vm.layer1EventCountTag\", vm.layer1EventCountTag);\n        return d.value[vm.layer1EventCountTag];\n      });\n      // console.log(\"maxCount\", maxCount);\n\n      ///////////////////////////////////////////////////////////////////////////\n      //////////////// Update the gradient for the legend ///////////////////////\n      ///////////////////////////////////////////////////////////////////////////\n      var colorScale = this.getColorScale(maxCount, this.colorRange);\n\n      var countPoints = this.getCountPoints(maxCount, this.width, 10);\n\n      //Update the linearGradient\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](\"#common_grads_def\").selectAll(\"linearGradient\").selectAll(\"stop\").attr(\"stop-color\", function (d, i) {\n        return colorScale(countPoints[i]);\n      });\n\n      ///////////////////////////////////////////////////////////////////////////\n      ////////////////////////// Update the legend //////////////////////////////\n      ///////////////////////////////////////////////////////////////////////////\n      var xAxis = this.getXAxis(this.legendWidth, maxCount);\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](\"#axis\").selectAll(\".tick\").remove();\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](\"#axis\").call(xAxis);\n\n      ///////////////////////////////////////////////////////////////////////////\n      //////////////// Set the dynamic gradient for layer1 //////////////////////\n      ///////////////////////////////////////////////////////////////////////////\n      // const gLayer1 = d3.selectAll(\"#layer1\");\n\n      // edit event count  \n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](\"#layer1\").selectAll(\"path\").filter(function (d) {\n        if (d.type === \"Feature\") {\n          var featureCode = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, vm.layer1FeatureCode);\n          var element = eventList[featureCode];\n\n          if (!element) {\n            d[vm.layer1EventCountTag] = 1;\n            return true;\n          } else {\n            var sortValue = element[vm.layer1EventCountTag];\n            if (d[vm.layer1EventCountTag]) {\n              if (sortValue != d[vm.layer1EventCountTag]) {\n                d[vm.layer1EventCountTag] = sortValue;\n                return true;\n              }\n            } else {\n              d[vm.layer1EventCountTag] = sortValue;\n              return true;\n            }\n          }\n        }\n        return false;\n      });\n\n      // edit event count\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](\"#layer1_grads\").selectAll(\"radialGradient\").selectAll(\"stop\").style(\"stop-color\", function (d, i) {\n        return colorScale(d[vm.layer1EventCountTag]);\n      });\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](\"#layer1_hgrads\").selectAll(\"radialGradient\").selectAll(\"stop\").filter(function (d) {\n        return this.getAttribute(\"offset\") === \"100%\";\n      }).style(\"stop-color\", function (d, i) {\n        return colorScale(d[vm.layer1EventCountTag]);\n      });\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](\"#layer1\").selectAll(\"path\").filter(function (d) {\n        return d.type === \"Feature\";\n      }).style(\"fill\", function (d, i) {\n        return \"url(#grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, vm.layer1FeatureCode) + \")\";\n      });\n    },\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    /////////////////////// legend common functions ///////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    getCountScale: function getCountScale(maxCount, width) {\n      //Calculate the variables for the sort gradient\n      return __WEBPACK_IMPORTED_MODULE_0_d3__[\"scale\"].linear().domain([0, maxCount]).range([0, width]);\n    },\n    getCountPoints: function getCountPoints(maxCount, width, size) {\n      //Calculate the variables for the sort gradient\n      var countScale = this.getCountScale(maxCount, size);\n\n      //Calculate the variables for the sort gradient\n      var countRange = countScale.domain();\n      countRange[2] = countRange[1] - countRange[0];\n      var countPoints = [];\n      for (var i = 0; i < size; i++) {\n        countPoints.push(i * countRange[2] / (size - 1) + countRange[0]);\n      }\n\n      return countPoints;\n    },\n    getColorScale: function getColorScale(maxCount, colorRange) {\n\n      return __WEBPACK_IMPORTED_MODULE_0_d3__[\"scale\"].linear().domain([0, maxCount / 2, maxCount]).range(colorRange.split(\",\"));\n    },\n    getXAxis: function getXAxis(legendWidth, maxCount) {\n      var xScale = __WEBPACK_IMPORTED_MODULE_0_d3__[\"scale\"].linear().range([-legendWidth / 2, legendWidth / 2]).domain([0, maxCount]);\n\n      return __WEBPACK_IMPORTED_MODULE_0_d3__[\"svg\"].axis().orient(\"bottom\").ticks(5)\n      //.tickFormat(formatPercent)\n      .scale(xScale);\n    }\n  }\n\n});\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_topojson__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_topojson___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_topojson__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_findprop__ = __webpack_require__(0);\n//\n//\n//\n//\n//\n\n\n\n\n\nvar props = {\n  // data: {\n  //   type: Array,\n  //   default: () => [],\n  // },\n  topojsonPath: {\n    type: String\n  },\n  width: {\n    type: Number,\n    default: 1000\n  },\n  height: {\n    type: Number,\n    default: 1000\n  },\n  colorRange: {\n    type: String,\n    default: '#0d47a1,#e3f2fd'\n  },\n  center: {\n    type: String,\n    default: '139.752268, 35.677043'\n  },\n  scale: {\n    type: Number,\n    default: 110000\n  },\n  layerObjects: {\n    type: String,\n    default: 'districts'\n  },\n  layerFeatureName: {\n    type: String,\n    default: 'properties.district'\n  },\n  layerFeatureCode: {\n    type: String,\n    default: 'properties.district_code'\n  },\n  featureNameStyle: {\n    type: String,\n    default: 'static'\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'd3-geo-staic',\n  // data() {\n  //   return {\n  //     data: [99, 71, 78, 25, 36, 92],\n  //     line: '',\n  //   };\n  // },\n  props: props,\n  mounted: function mounted() {\n\n    var layerObjects = this.layerObjects;\n    var colorRange = this.colorRange;\n    var layerFeatureCode = this.layerFeatureCode;\n    var layerFeatureName = this.layerFeatureName;\n    var featureNameStyle = this.featureNameStyle;\n\n    var svg = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this.$el).append('svg').attr('width', this.width).attr('height', this.height);\n\n    var g = svg.append('g');\n    var gLayer = g.append(\"g\").attr(\"id\", this.layerObjects);\n    var gLabelLayer = g.append(\"g\").attr(\"id\", this.layerObjects + \"_label\");\n\n    console.log(\"this.center:\", this.center);\n\n    var projection = __WEBPACK_IMPORTED_MODULE_0_d3__[\"geo\"].mercator().center(this.center.split(\",\")).scale(this.scale).translate([this.width / 2, this.height / 2]);\n\n    var path = __WEBPACK_IMPORTED_MODULE_0_d3__[\"geo\"].path().projection(projection);\n\n    console.log(\"this.topojsonPath:\", this.topojsonPath);\n    __WEBPACK_IMPORTED_MODULE_0_d3__[\"json\"](this.topojsonPath, function (error, json) {\n      console.log(\"layerObjects:\", layerObjects);\n      var layerFeatues = __WEBPACK_IMPORTED_MODULE_1_topojson__[\"feature\"](json, json.objects[layerObjects]).features;\n      var mesh = __WEBPACK_IMPORTED_MODULE_1_topojson__[\"mesh\"](json, json.objects[layerObjects], function (a, b) {\n        return a !== b;\n      });\n\n      var color = __WEBPACK_IMPORTED_MODULE_0_d3__[\"scale\"].linear().domain([1, layerFeatues.length]).interpolate(__WEBPACK_IMPORTED_MODULE_0_d3__[\"interpolateHcl\"]).range(colorRange.split(\",\"));\n\n      // fill color gradient process\n      var hgrads = g.append(\"defs\").attr(\"id\", layerObjects + \"_hdef\").selectAll(\"radialGradient\").data(layerFeatues).enter().append(\"radialGradient\").attr(\"gradientUnits\", \"objectBoundingBox\").attr(\"fx\", \"50%\").attr(\"fy\", \"50%\").attr(\"cx\", \"50%\").attr(\"cy\", \"50%\").attr(\"r\", \"100%\").attr(\"id\", function (d) {\n        // return \"hgrad\" + d.id;\n        return \"hgrad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode);\n      });\n\n      hgrads.append(\"stop\").attr(\"offset\", \"0%\").style(\"stop-color\", \"white\").style(\"stop-opacity\", \"1\");\n\n      hgrads.append(\"stop\").attr(\"offset\", \"100%\").style(\"stop-color\", function (d, i) {\n        return color(i + 1);\n      }).style(\"stop-opacity\", \"1\");\n\n      var grads = g.append(\"defs\").attr(\"id\", layerObjects + \"_def\").selectAll(\"radialGradient\").data(layerFeatues).enter().append(\"radialGradient\").attr(\"gradientUnits\", \"objectBoundingBox\").attr(\"fx\", \"50%\").attr(\"fy\", \"50%\").attr(\"cx\", \"50%\").attr(\"cy\", \"50%\").attr(\"r\", \"35%\").attr(\"id\", function (d) {\n        // return \"grad\" + d.id;\n        return \"grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode);\n      });\n\n      grads.append(\"stop\").attr(\"offset\", \"0%\").style(\"stop-color\", function (d, i) {\n        return color(i + 1);\n      }).style(\"stop-opacity\", \".8\");\n\n      grads.append(\"stop\").attr(\"offset\", \"100%\").style(\"stop-color\", function (d, i) {\n        return color(i + 1);\n      }).style(\"stop-opacity\", \"1\");\n\n      if (featureNameStyle == 'static') {\n        var mouseover = function mouseover(p) {\n\n          __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).style(\"fill\", function (d) {\n            // return \"url(#hgrad\" + d.id + \")\";\n            return \"url(#hgrad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode) + \")\";\n          });\n        };\n\n        var mouseout = function mouseout(p) {\n\n          __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).style(\"fill\", function (d) {\n            // return \"url(#grad\" + d.id + \")\";\n            return \"url(#grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode) + \")\";\n          });\n        };\n\n        // polygons\n        gLayer.selectAll(\"path\").data(layerFeatues).enter().append(\"path\")\n        // .attr(\"class\", \"layer1\")\n        .attr(\"d\", path)\n        // .attr(\"fill\", function(d,i) { \n        //   return color(i + 1);\n        // })\n        .attr(\"fill\", function (d) {\n          // return \"url(#grad\" + d.id + \")\";\n          return \"url(#grad\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode) + \")\";\n        }).attr(\"layer-feature-code\", function (d) {\n          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode);\n        }).attr(\"layer-feature-name\", function (d) {\n          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureName);\n        }).on(\"mouseover\", mouseover).on(\"mouseout\", mouseout);\n\n        // border\n        gLayer.append(\"path\").datum(mesh).attr(\"d\", path).attr(\"class\", \"layer1-boundary\");\n\n        // Layer1 labels\n        gLabelLayer.selectAll(\"text\").data(layerFeatues).enter().append(\"text\").attr(\"class\", \"label\").attr(\"pointer-events\", \"none\").attr(\"transform\", function (d) {\n          return \"translate(\" + path.centroid(d) + \")\";\n        }).attr(\"dy\", \".35em\").text(function (d) {\n          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureName);\n        }).attr(\"layer-feature-code\", function (d) {\n          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_findprop__[\"a\" /* default */])(d, layerFeatureCode);\n        });\n      }\n    });\n  }\n});\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_D3GeoDoubleLayer__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_D3GeoDoubleLayer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_D3GeoDoubleLayer__);\n/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, \"D3GeoDoubleLayer\", function() { return __WEBPACK_IMPORTED_MODULE_1__components_D3GeoDoubleLayer___default.a; });\n/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, \"D3GeoStatic\", function() { return __WEBPACK_IMPORTED_MODULE_0__components_D3GeoStatic___default.a; });\n\n\n\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div')\n},staticRenderFns: []}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div')\n},staticRenderFns: []}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// lib/vue-d3-geo.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-d3-geo/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7fbcc3fd692133405afd","export default (obj, path) => {\n\n    var args = path.split('.'), i, l;\n\n    for (i=0, l=args.length; i<l; i++) {\n        if (!obj.hasOwnProperty(args[i]))\n            return;\n        obj = obj[args[i]];\n    }\n\n    return obj;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/findprop.js","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 1\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/build/topojson.js\n// module id = 2\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 3\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-833fc836\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./D3GeoDoubleLayer.vue\")\n}\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./D3GeoDoubleLayer.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-833fc836\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./D3GeoDoubleLayer.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/D3GeoDoubleLayer.vue\n// module id = 4\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b45b0ece\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./D3GeoStatic.vue\")\n}\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./D3GeoStatic.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b45b0ece\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./D3GeoStatic.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/D3GeoStatic.vue\n// module id = 5\n// module chunks = 0","<template>\n  <div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\nimport findprop from '../utils/findprop';\n\nconst props = {\n  id: {\n    type: String,\n    required: true\n  },\n  topojsonPath: {\n    type: String\n  },\n  width: {\n    type: Number,\n    default: 1000\n  },\n  height: {\n    type: Number,\n    default: 1000\n  },\n  colorRange: {\n    type: String,\n    default: '#e3f2fd,#2196f3,#0d47a1'\n  },\n  center: {\n    type: String,\n    default: '139.752268, 35.677043'\n  },\n  scale: {\n    type: Number,\n    default: 110000\n  },\n  layer1Objects: {\n    type: String,\n    default: 'districts'\n  },\n  layer2Objects: {\n    type: String,\n    default: 'blocks'\n  },\n  layer1FeatureName: {\n    type: String,\n    default: 'properties.district'\n  },\n  layer1FeatureCode: {\n    type: String,\n    default: 'properties.district_code'\n  },\n  layer2FeatureName: {\n    type: String,\n    default: 'properties.block'\n  },\n  layer2FeatureCode: {\n    type: String,\n    default: 'properties.block_code'\n  },\n  layer1EventData: {\n    type: Object,\n    default: null\n  },\n  layer2EventData: {\n    type: String,\n    default: 'circleData'\n  },\n  layer1EventCountTag: {\n    type: String,\n    default: 'dropoffCount'\n  },\n  layer1LegendTitle: {\n    type: String,\n    default: '３０分以内の降車イベント'\n  },\n  onReceiveEvents: {\n    type: String,\n    default: 'subTaxiEventsFrom'\n  },\n  onStopEvents: {\n    type: String,\n    default: 'unsubTaxiEvents'\n  }\n};\n\nexport default {\n  name: 'd3-geo-double-layer',\n  data() {\n    return {\n      legendWidth: 0,\n      gLayer1: () => ({})\n    };\n  },\n  props,\n  mounted() {\n    const width = this.width;\n    const height = this.height;\n    const layer1Objects = this.layer1Objects;\n    const layer2Objects = this.layer2Objects;\n    const colorRange = this.colorRange;\n    const layer1FeatureCode = this.layer1FeatureCode;\n    const layer1FeatureName = this.layer1FeatureName;\n    const layer2FeatureCode = this.layer2FeatureCode;\n    const layer2FeatureName = this.layer2FeatureName;\n    const layer1LegendTitle = this.layer1LegendTitle;\n    const onReceiveEvents = this.onReceiveEvents;\n    const onStopEvents = this.onStopEvents;\n    let vm = this;\n\n\n    const svg = d3.select(this.$el)\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height);\n\n    svg.append(\"rect\")\n      .attr(\"class\", \"background\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"click\", reset);\n\n    const g = svg.append('g');\n    const gLayer2 = g.append(\"g\").attr(\"id\", \"layer2\");\n    const gLayer1 = g.append(\"g\").attr(\"id\", \"layer1\");\n// console.log(\"gLayer1\", gLayer1);\n    // this.gLayer1 = gLayer1;\n// console.log(\"this.gLayer1\", this.gLayer1);\n    const gLabelLayer2 = g.append(\"g\").attr(\"id\", \"layer2_label\");\n    const gLabelLayer1 = g.append(\"g\").attr(\"id\", \"layer1_label\");\n\n    const projection = d3.geo.mercator()\n      .center(this.center.split(\",\"))\n      .scale(this.scale)\n      .translate([width / 2, height / 2]);\n\n    const path = d3.geo.path().projection(projection);\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////// adding common static gradients //////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    const commonGrads = g.append(\"defs\").attr(\"id\", \"common_grads_def\");\n\n    const circleGrads = commonGrads\n      .append(\"radialGradient\")\n      .attr(\"gradientUnits\", \"objectBoundingBox\")\n      .attr(\"fx\", \"50%\")\n      .attr(\"fy\", \"50%\")\n      .attr(\"cx\", \"50%\")\n      .attr(\"cy\", \"50%\")\n      .attr(\"r\", \"35%\")\n      .attr(\"id\", \"circleGrad1\");\n      \n    circleGrads.append(\"stop\")\n      .attr(\"offset\", \"0%\")\n      .style(\"stop-color\",  \"white\")\n      .style(\"stop-opacity\", \"1\");\n    \n    circleGrads.append(\"stop\")\n      .attr(\"offset\", \"100%\")\n      .style(\"stop-color\",  function(d) { \n        return \"orange\";\n      })\n      .style(\"stop-opacity\", \".6\");\n\n    ///////////////////////////////////////////////////////////////////////////\n    //////////////// Adding the initial gradient for the legend ///////////////\n    ///////////////////////////////////////////////////////////////////////////\n    const countPoints = this.getCountPoints(1, width, 10);\n    const countScale = this.getCountScale(1, width);\n\n    //Create the linearGradient\n    commonGrads\n      .append(\"linearGradient\")\n      .attr(\"id\", \"legend-traffic\")\n      .attr(\"x1\", \"0%\").attr(\"y1\", \"0%\")\n      .attr(\"x2\", \"100%\").attr(\"y2\", \"0%\")\n      .selectAll(\"stop\") \n      .data(d3.range(10))                \n      .enter().append(\"stop\") \n      .attr(\"offset\", function(d,i) { \n        return countScale( countPoints[i] )/width;\n      })   \n      .attr(\"stop-color\", function(d,i) { \n        return colorRange.split(\",\")[0]; \n      });\n\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    ////////////////////////// Draw the init legend ///////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    const gBox = g.node().getBBox();\n\n    this.legendWidth = Math.min(width*0.8, 600);\n    //Color Legend container\n    const legendsvg = g.append(\"g\")\n      .attr(\"id\", \"legendWrapper\")\n      .attr(\"transform\", \"translate(\" + (width/2) + \",\" + (height * 0.95) + \")\");\n\n    //Draw the Rectangle\n    legendsvg.append(\"rect\")\n      .attr(\"id\", \"legendRect\")\n      .attr(\"x\", -this.legendWidth/2)\n      .attr(\"y\", 0)\n      .attr(\"width\", this.legendWidth)\n      .attr(\"height\", 10)\n      .style(\"fill\", \"url(#legend-traffic)\");\n      \n    //Append title\n    legendsvg.append(\"text\")\n      .attr(\"class\", \"layer1LegendTitle\")\n      .attr(\"x\", 0)\n      .attr(\"y\", -10)\n      .style(\"text-anchor\", \"middle\")\n      .text(layer1LegendTitle);\n\n    //Define x-axis\n    const xAxis = this.getXAxis(this.legendWidth, 0);\n\n    //Set up X axis\n    legendsvg.append(\"g\")\n      .attr(\"id\", \"axis\")\n      .attr(\"transform\", \"translate(0,\" + (10) + \")\")\n      .call(xAxis);\n\n    // console.log(\"this.topojsonPath:\", this.topojsonPath);\n\n    d3.json(this.topojsonPath, function (error, json) {\n      let vm = this;\n\n      const layer1Featues = topojson.feature(json, json.objects[layer1Objects]).features;\n      const layer2Featues = topojson.feature(json, json.objects[layer2Objects]).features;\n      const meshLayer1 = topojson.mesh(json, json.objects[layer1Objects], function(a, b) { return a !== b; });\n\n      const initColor = colorRange.split(\",\")[0];\n\n      // fill color gradient process\n      const hgrads = g.append(\"defs\").attr(\"id\", \"layer1_hgrads\").selectAll(\"radialGradient\")\n        .data(layer1Featues)\n        .enter()\n        .append(\"radialGradient\")\n        .attr(\"gradientUnits\", \"objectBoundingBox\")\n        .attr(\"fx\", \"50%\")\n        .attr(\"fy\", \"50%\")\n        .attr(\"cx\", \"50%\")\n        .attr(\"cy\", \"50%\")\n        .attr(\"r\", \"100%\")\n        .attr(\"id\", function(d, i) { \n          \n          return \"hgrad\" + findprop(d, layer1FeatureCode);\n          // return \"hgrad\" + (i + 1);\n        });\n      \n      hgrads.append(\"stop\")\n          .attr(\"offset\", \"0%\")\n          .style(\"stop-color\", \"white\")\n          .style(\"stop-opacity\", \"1\");\n\n\n      hgrads.append(\"stop\")\n          .attr(\"offset\", \"100%\")\n          .style(\"stop-color\",  function(d, i) { \n            return initColor; \n          })\n          .style(\"stop-opacity\", \"1\");\n\n      const grads = g.append(\"defs\").attr(\"id\", \"layer1_grads\").selectAll(\"radialGradient\")\n        .data(layer1Featues)\n        .enter()\n        .append(\"radialGradient\")\n        .attr(\"gradientUnits\", \"objectBoundingBox\")\n        .attr(\"fx\", \"50%\")\n        .attr(\"fy\", \"50%\")\n        .attr(\"cx\", \"50%\")\n        .attr(\"cy\", \"50%\")\n        .attr(\"r\", \"35%\")\n        .attr(\"id\", function(d, i) { \n          return \"grad\" + findprop(d, layer1FeatureCode);\n          // return \"grad\" + (i + 1);\n        });\n\n      grads.append(\"stop\")\n          .attr(\"offset\", \"0%\")\n          .style(\"stop-color\",  function(d, i) { \n            return initColor; \n          })\n          .style(\"stop-opacity\", \".7\");\n\n      grads.append(\"stop\")\n          .attr(\"offset\", \"100%\")\n          .style(\"stop-color\",  function(d, i) { \n            return initColor; \n          })\n          .style(\"stop-opacity\", \"1\");\n\n      const mouseoverLayer1 = function(p) {\n        d3.select(this)\n          .style(\"fill\", function(d) {\n              return \"url(#hgrad\" + findprop(d, layer1FeatureCode) + \")\";\n          });\n      }\n      \n      const mouseoutLayer1 = function (p) {\n        d3.select(this)\n          .style(\"fill\", function(d) { \n            return \"url(#grad\" + findprop(d, layer1FeatureCode) + \")\";\n          });\n      }\n\n      // layer2 polygons and boundary\n      gLayer2.selectAll(\"path\")\n        .data(layer2Featues)\n        .enter().append(\"path\")\n        .attr(\"d\", path)\n        .attr(\"fill\", function(d, i) {\n            return \"url(#grad\" + findprop(d, layer1FeatureCode) + \")\";\n            // return \"#bbdefb\";\n        })\n        .style(\"fill-opacity\", 0)\n        .style(\"display\", \"none\")\n        .attr(\"layer1-feature-code\", function(d) {\n          return findprop(d, layer1FeatureCode);\n        })\n        .attr(\"layer1-feature-name\", function(d) {\n          return findprop(d, layer1FeatureName);\n        })\n        .attr(\"layer2-feature-code\", function(d) { \n          return findprop(d, layer2FeatureCode);\n        })\n        .attr(\"layer2-feature-name\", function(d) { \n          return findprop(d, layer2FeatureName);\n        })\n        .attr(\"class\", \"layer2\")\n        .on(\"click\", layer2Clicked)\n        .on(\"mouseover\", mouseoverLayer2)\n        .on(\"mouseout\", mouseoutLayer2);\n\n      // Layer2 labels\n      gLabelLayer2.selectAll(\"text\")\n        .data(layer2Featues)\n        .enter().append(\"text\")\n        .attr(\"class\", \"label\")\n        .style(\"fill-opacity\", 0)\n        .style(\"display\", \"none\")\n        .attr(\"transform\", function(d) { \n          return \"translate(\" + path.centroid(d) + \")\"; \n        })\n        .attr(\"dy\", \".35em\")\n        .attr(\"pointer-events\", \"none\")\n        .text(function(d) { \n          return findprop(d, layer2FeatureName); \n        })\n        .attr(\"layer2-feature-code\", function(d) { \n          return findprop(d, layer2FeatureCode);\n        });\n\n      // Layer1 polygons\n// console.log(\"vm.gLayer1!!!!!!!!!!\", vm.gLayer1);\n      gLayer1.selectAll(\"path\")\n        .data(layer1Featues)\n        .enter().append(\"path\")\n        .attr(\"class\", \"layer1\")\n        .attr(\"d\", path)\n        .style(\"fill\", function(d, i) {\n          return \"url(#grad\" + findprop(d, layer1FeatureCode) + \")\";\n        })\n        .attr(\"layer1-feature-code\", function(d) {\n          return findprop(d, layer1FeatureCode);\n        })\n        .attr(\"layer1-feature-name\", function(d) {\n          return findprop(d, layer1FeatureName);\n        })\n        .on(\"click\", layer1Clicked)\n        .on(\"mouseover\", mouseoverLayer1)\n        .on(\"mouseout\", mouseoutLayer1);\n\n      // Layer1 border\n      gLayer1.append(\"path\")\n        .datum(meshLayer1)\n        .attr(\"d\", path)\n        .attr(\"class\", \"layer1-boundary\");\n\n      // Layer1 labels\n      gLabelLayer1.selectAll(\"text\")\n        .data(layer1Featues)\n        .enter().append(\"text\")\n        .attr(\"class\", \"label\")\n        .attr(\"transform\", function(d) { \n          return \"translate(\" + path.centroid(d) + \")\"; \n        })\n        .attr(\"dy\", \".35em\")\n        .attr(\"pointer-events\", \"none\")\n        .text(function(d) { \n          return findprop(d, layer1FeatureName); \n        })\n        .attr(\"layer1-feature-code\", function(d) { \n          return findprop(d, layer1FeatureCode);\n        });\n\n    });\n\n    /***** click to zoom *****/\n    var active = d3.select(null);\n\n    const layer2Clicked = function(d) {\n      if (active.node()) {\n        if (this.getAttribute(\"layer1-feature-code\") == active.node().getAttribute(\"layer1-feature-code\")) {\n          return reset();\n        }\n      }\n    }\n\n    const layer1Clicked = function(d) {\n      if (active.node() === this) {\n        return reset();\n      }\n\n      active.classed(\"active\", false);\n      active = d3.select(this).classed(\"active\", true);\n\n      zoom(d);\n    };\n\n\n    const zoom = function(d) {\n      const bounds = path.bounds(d),\n          dx = bounds[1][0] - bounds[0][0],\n          dy = bounds[1][1] - bounds[0][1],\n          x = (bounds[0][0] + bounds[1][0]) / 2,\n          y = (bounds[0][1] + bounds[1][1]) / 2,\n          scale = .9 / Math.max(dx / width, dy / height),\n          translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      g.transition()\n        .duration(750)\n        .style(\"stroke-width\", 1.5 / scale + \"px\")\n        .attr(\"transform\", \"translate(\" + translate + \")scale(\" + scale + \")\");\n\n      // hide layer1 labels\n      gLabelLayer1.selectAll('text')\n        .transition()\n        .style(\"fill-opacity\", 0)\n        .transition()\n        .style(\"display\", \"none\");\n\n\n      gLayer2.selectAll(\"path\")\n        .transition()\n        .style(\"fill-opacity\", 1)\n        .style(\"display\", \"block\");\n\n\n      // callback to notify the specified feature is ready to receive location events\n      const featureCode = findprop(d, layer1FeatureCode);\n      // scope.onStopEvents();\n      // scope.onReceiveEvents({feature: featureCode});\n\n      vm.$emit(onReceiveEvents);\n      vm.$emit(onStopEvents);\n    }\n\n    function reset() {\n      active.classed(\"active\", false);\n      active = d3.select(null);\n\n      g.transition()\n        .duration(750)\n        .style(\"stroke-width\", \"1.5px\")\n        .attr(\"transform\", \"\");\n\n      // show layer1 labels\n      gLabelLayer1.selectAll('text')\n        .transition()\n        .style(\"display\", \"block\")\n        .transition()\n        .duration(250)\n        .style(\"fill-opacity\", 1);\n\n      gLayer2.selectAll(\"path\")\n        .transition()\n        .style(\"fill-opacity\", 0)\n        .style(\"display\", \"none\");\n\n      // scope.onStopEvents();\n      vm.$emit(onStopEvents);\n    };\n    /***** click to zoom *****/\n\n    /***** hover *****/\n    const mouseoverLayer2 = function(p) {\n      gLabelLayer2.selectAll(\"text\")\n        .filter(function(d){\n          return findprop(p, layer2FeatureCode) == findprop(d, layer2FeatureCode);\n        })\n        .transition()\n        .style(\"fill-opacity\", 1)\n        .style(\"display\", \"block\");\n\n      d3.select(this)\n        .style(\"fill\", function(d) {\n            return \"url(#hgrad\" + findprop(d, layer1FeatureCode) + \")\";\n        });\n    }\n    \n    const mouseoutLayer2 = function (p) {\n      gLabelLayer2.selectAll(\"text\")\n        .filter(function(d){\n          return findprop(p, layer2FeatureCode) == findprop(d, layer2FeatureCode);\n        })\n        .transition()\n        .style(\"fill-opacity\", 0)\n        .transition()\n        .style(\"display\", \"none\");\n\n      d3.select(this)\n        .style(\"fill\", function(d) {\n            return \"url(#grad\" + findprop(d, layer1FeatureCode) + \")\";\n        });\n    }\n    /***** hover *****/\n  },\n  watch: {\n    layer1EventData: function(newData, oldData) {\n      // console.log(\"newData\", newData);\n      // console.log(\"oldData\", oldData);\n      this.visualizeLayer1Events(newData);\n    }\n  },\n  methods: {\n\n    visualizeLayer1Events(eventList) {\n      let vm = this;\n\n      var events = d3.entries(eventList);\n// console.log(\"events\", events);\n      var maxCount = d3.max(events, function(d) {\n        // console.log(\"d\", d);\n        // console.log(\"vm.layer1EventCountTag\", vm.layer1EventCountTag);\n        return d.value[vm.layer1EventCountTag]; \n      });\n// console.log(\"maxCount\", maxCount);\n\n      ///////////////////////////////////////////////////////////////////////////\n      //////////////// Update the gradient for the legend ///////////////////////\n      ///////////////////////////////////////////////////////////////////////////\n      var colorScale = this.getColorScale(maxCount, this.colorRange);\n\n      var countPoints = this.getCountPoints(maxCount, this.width, 10);\n\n      //Update the linearGradient\n      d3.select(\"#common_grads_def\")\n        .selectAll(\"linearGradient\")\n        .selectAll(\"stop\")\n        .attr(\"stop-color\",  function(d, i) { \n          return colorScale(countPoints[i]); \n        });\n\n      ///////////////////////////////////////////////////////////////////////////\n      ////////////////////////// Update the legend //////////////////////////////\n      ///////////////////////////////////////////////////////////////////////////\n      var xAxis = this.getXAxis(this.legendWidth, maxCount);\n\n      d3.select(\"#axis\")\n        .selectAll(\".tick\")\n        .remove();\n\n      d3.select(\"#axis\")\n        .call(xAxis);\n\n\n      ///////////////////////////////////////////////////////////////////////////\n      //////////////// Set the dynamic gradient for layer1 //////////////////////\n      ///////////////////////////////////////////////////////////////////////////\n      // const gLayer1 = d3.selectAll(\"#layer1\");\n\n      // edit event count  \n      d3.select(\"#layer1\").selectAll(\"path\")\n        .filter(function(d){\n          if (d.type === \"Feature\") {\n            var featureCode = findprop(d, vm.layer1FeatureCode);\n            var element = eventList[featureCode];\n            \n            if (!element) {\n              d[vm.layer1EventCountTag] = 1;\n              return true;\n            } \n            else {\n              var sortValue = element[vm.layer1EventCountTag];\n              if (d[vm.layer1EventCountTag]) {\n                if (sortValue != d[vm.layer1EventCountTag]) {\n                  d[vm.layer1EventCountTag] = sortValue;\n                  return true;\n                }\n              } \n              else {\n                d[vm.layer1EventCountTag] = sortValue;\n                return true;\n              }                    \n            }\n          }\n          return false;\n        });\n\n      // edit event count\n      d3.select(\"#layer1_grads\")\n        .selectAll(\"radialGradient\")\n        .selectAll(\"stop\")\n        .style(\"stop-color\",  function(d, i) { \n          return colorScale(d[vm.layer1EventCountTag]); \n        });\n\n      d3.select(\"#layer1_hgrads\")\n        .selectAll(\"radialGradient\")\n        .selectAll(\"stop\")\n        .filter(function(d){\n            return this.getAttribute(\"offset\") === \"100%\"\n        })\n        .style(\"stop-color\",  function(d, i) { \n          return colorScale(d[vm.layer1EventCountTag]); \n        });\n\n      d3.select(\"#layer1\").selectAll(\"path\")\n        .filter(function(d){\n          return d.type === \"Feature\"\n        })\n        .style(\"fill\", function(d, i) {\n          return \"url(#grad\" + findprop(d, vm.layer1FeatureCode) + \")\";\n        });\n    },\n  \n    ///////////////////////////////////////////////////////////////////////////\n    /////////////////////// legend common functions ///////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    getCountScale(maxCount, width) {\n      //Calculate the variables for the sort gradient\n      return d3.scale.linear()\n        .domain([0, maxCount])\n        .range([0, width]);\n    },\n    getCountPoints(maxCount, width, size) {\n      //Calculate the variables for the sort gradient\n      const countScale = this.getCountScale(maxCount, size);\n\n      //Calculate the variables for the sort gradient\n      const countRange = countScale.domain();\n      countRange[2] = countRange[1] - countRange[0];\n      const countPoints = [];\n      for(var i = 0; i < size; i++) {\n        countPoints.push(i * countRange[2]/(size-1) + countRange[0]);\n      }\n\n      return countPoints;\n    },\n    getColorScale(maxCount, colorRange) {\n\n      return d3.scale.linear()\n        .domain([0, maxCount/2, maxCount])\n        .range(colorRange.split(\",\"));\n    },\n    getXAxis(legendWidth, maxCount) {\n      const xScale = d3.scale.linear()\n       .range([-legendWidth/2, legendWidth/2])\n       .domain([ 0, maxCount　] );\n\n      return d3.svg.axis().orient(\"bottom\")\n              .ticks(5)\n              //.tickFormat(formatPercent)\n              .scale(xScale);\n    }\n  }\n\n};\n</script>\n\n<style>\n@import url(//fonts.googleapis.com/earlyaccess/notosansjapanese.css);\n\nsvg {\n  font-size: 11px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 300;\n  margin: auto;\n  display: block;\n}\n\n.background {\n  fill: none;\n  pointer-events: all;\n}\n\n.circle {\n}\n\n.layer1 {\n  cursor: pointer;\n}\n\n\n.layer1:hover {\n  fill: orange;\n}\n\n.layer1.active {\n  display:none;\n}\n\n.layer1-boundary {\n  fill: none;\n  stroke: white;\n  stroke-dasharray: 2,2;\n  stroke-linejoin: round;\n  stroke-width: 1;\n}\n\n.layer1LegendTitle {\n  fill: black;\n  fill-opacity: 1;\n  font-size: 18px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 700;\n  text-anchor: middle;\n}\n\n.layer2 {\n  stroke: white;\n  stroke-width: 0.2;\n}\n\n.label {\n  fill: white;\n  fill-opacity: 1;\n  font-size: 18px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 700;\n  text-anchor: middle;\n  text-shadow:\n    2px 2px 0 #000,\n    -1px -1px 0 #000,  \n    1px -1px 0 #000,\n    -1px 1px 0 #000,\n     1px 1px 0 #000;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// D3GeoDoubleLayer.vue?12f50da6","<template>\n  <div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\nimport findprop from '../utils/findprop';\n\nconst props = {\n  // data: {\n  //   type: Array,\n  //   default: () => [],\n  // },\n  topojsonPath: {\n    type: String\n  },\n  width: {\n    type: Number,\n    default: 1000\n  },\n  height: {\n    type: Number,\n    default: 1000\n  },\n  colorRange: {\n    type: String,\n    default: '#0d47a1,#e3f2fd'\n  },\n  center: {\n    type: String,\n    default: '139.752268, 35.677043'\n  },\n  scale: {\n    type: Number,\n    default: 110000\n  },\n  layerObjects: {\n    type: String,\n    default: 'districts'\n  },\n  layerFeatureName: {\n    type: String,\n    default: 'properties.district'\n  },\n  layerFeatureCode: {\n    type: String,\n    default: 'properties.district_code'\n  },\n  featureNameStyle: {\n    type: String,\n    default: 'static'\n  }\n};\n\nexport default {\n  name: 'd3-geo-staic',\n  // data() {\n  //   return {\n  //     data: [99, 71, 78, 25, 36, 92],\n  //     line: '',\n  //   };\n  // },\n  props,\n  mounted() {\n\n    const layerObjects = this.layerObjects;\n    const colorRange = this.colorRange;\n    const layerFeatureCode = this.layerFeatureCode;\n    const layerFeatureName = this.layerFeatureName;\n    const featureNameStyle = this.featureNameStyle;\n\n    const svg = d3.select(this.$el)\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    const g = svg.append('g');\n    const gLayer = g.append(\"g\").attr(\"id\", this.layerObjects);\n    const gLabelLayer = g.append(\"g\").attr(\"id\", this.layerObjects + \"_label\");\n\n    console.log(\"this.center:\", this.center);\n\n    const projection = d3.geo.mercator()\n      .center(this.center.split(\",\"))\n      .scale(this.scale)\n      .translate([this.width / 2, this.height / 2]);\n\n    const path = d3.geo.path().projection(projection);\n    \n\n    \n    \n\n    console.log(\"this.topojsonPath:\", this.topojsonPath);\n    d3.json(this.topojsonPath, function (error, json) {\n      console.log(\"layerObjects:\", layerObjects);\n      const layerFeatues = topojson.feature(json, json.objects[layerObjects]).features;\n      const mesh = topojson.mesh(json, json.objects[layerObjects], function(a, b) { return a !== b; });\n\n      const color = d3.scale.linear().domain([1,layerFeatues.length])\n                    .interpolate(d3.interpolateHcl)\n                    .range(colorRange.split(\",\"));\n\n      // fill color gradient process\n      const hgrads = g.append(\"defs\").attr(\"id\", layerObjects + \"_hdef\").selectAll(\"radialGradient\")\n        .data(layerFeatues)\n        .enter()\n        .append(\"radialGradient\")\n        .attr(\"gradientUnits\", \"objectBoundingBox\")\n        .attr(\"fx\", \"50%\")\n        .attr(\"fy\", \"50%\")\n        .attr(\"cx\", \"50%\")\n        .attr(\"cy\", \"50%\")\n        .attr(\"r\", \"100%\")\n        .attr(\"id\", function(d) { \n          // return \"hgrad\" + d.id;\n          return \"hgrad\" + findprop(d, layerFeatureCode);\n        });\n      \n      hgrads.append(\"stop\")\n          .attr(\"offset\", \"0%\")\n          .style(\"stop-color\", \"white\")\n          .style(\"stop-opacity\", \"1\");\n\n\n      hgrads.append(\"stop\")\n          .attr(\"offset\", \"100%\")\n          .style(\"stop-color\",  function(d, i) { \n            return color(i + 1); \n          })\n          .style(\"stop-opacity\", \"1\");\n\n      const grads = g.append(\"defs\").attr(\"id\", layerObjects + \"_def\").selectAll(\"radialGradient\")\n        .data(layerFeatues)\n        .enter()\n        .append(\"radialGradient\")\n        .attr(\"gradientUnits\", \"objectBoundingBox\")\n        .attr(\"fx\", \"50%\")\n        .attr(\"fy\", \"50%\")\n        .attr(\"cx\", \"50%\")\n        .attr(\"cy\", \"50%\")\n        .attr(\"r\", \"35%\")\n        .attr(\"id\", function(d) { \n          // return \"grad\" + d.id;\n          return \"grad\" + findprop(d, layerFeatureCode);\n        });\n\n      grads.append(\"stop\")\n          .attr(\"offset\", \"0%\")\n          .style(\"stop-color\",  function(d, i) { \n            return color(i + 1); \n          })\n          .style(\"stop-opacity\", \".8\");\n\n      grads.append(\"stop\")\n          .attr(\"offset\", \"100%\")\n          .style(\"stop-color\",  function(d, i) { \n            return color(i + 1); \n          })\n          .style(\"stop-opacity\", \"1\");\n\n      if (featureNameStyle == 'static') {\n        var mouseover = function(p) {\n\n          d3.select(this)\n            .style(\"fill\", function(d) {\n                // return \"url(#hgrad\" + d.id + \")\";\n                return \"url(#hgrad\" + findprop(d, layerFeatureCode) + \")\";\n            });\n\n        }\n        \n        var mouseout = function (p) {\n\n          d3.select(this)\n            .style(\"fill\", function(d) { \n              // return \"url(#grad\" + d.id + \")\";\n              return \"url(#grad\" + findprop(d, layerFeatureCode) + \")\";\n            });\n        }\n\n        // polygons\n        gLayer.selectAll(\"path\")\n          .data(layerFeatues)\n          .enter().append(\"path\")\n          // .attr(\"class\", \"layer1\")\n          .attr(\"d\", path)\n          // .attr(\"fill\", function(d,i) { \n          //   return color(i + 1);\n          // })\n          .attr(\"fill\", function(d) {\n              // return \"url(#grad\" + d.id + \")\";\n              return \"url(#grad\" + findprop(d, layerFeatureCode) + \")\";\n          })\n          .attr(\"layer-feature-code\", function(d) {\n            return findprop(d, layerFeatureCode);\n          })\n          .attr(\"layer-feature-name\", function(d) {\n            return findprop(d, layerFeatureName);\n          })\n          .on(\"mouseover\", mouseover)\n          .on(\"mouseout\", mouseout);\n\n        // border\n        gLayer.append(\"path\")\n          .datum(mesh)\n          .attr(\"d\", path)\n          .attr(\"class\", \"layer1-boundary\");\n\n        // Layer1 labels\n        gLabelLayer.selectAll(\"text\")\n          .data(layerFeatues)\n          .enter().append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"pointer-events\", \"none\")\n          .attr(\"transform\", function(d) { \n            return \"translate(\" + path.centroid(d) + \")\"; \n          })\n          .attr(\"dy\", \".35em\")\n          .text(function(d) { \n            return findprop(d, layerFeatureName); \n          })\n          .attr(\"layer-feature-code\", function(d) { \n            return findprop(d, layerFeatureCode);\n          });\n\n      } \n\n    });\n\n  }\n};\n</script>\n\n\n\n<style>\n@import url(//fonts.googleapis.com/earlyaccess/notosansjapanese.css);\n\nsvg {\n  font-size: 11px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 300;\n  margin: auto;\n  display: block;\n}\n\n.background {\n  fill: none;\n  pointer-events: all;\n}\n\n.circle {\n}\n\n.layer1 {\n  cursor: pointer;\n}\n\n\n.layer1:hover {\n  fill: orange;\n}\n\n.layer1.active {\n  display:none;\n}\n\n.layer1-boundary {\n  fill: none;\n  stroke: white;\n  stroke-dasharray: 2,2;\n  stroke-linejoin: round;\n  stroke-width: 1;\n}\n\n.layer1LegendTitle {\n  fill: black;\n  fill-opacity: 1;\n  font-size: 18px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 700;\n  text-anchor: middle;\n}\n\n.layer2 {\n  stroke: white;\n  stroke-width: 0.2;\n}\n\n.label {\n  fill: white;\n  fill-opacity: 1;\n  font-size: 18px;\n  font-family: 'Noto Sans Japanese', 'Klee', 'Meiryo';\n  font-weight: 700;\n  text-anchor: middle;\n  text-shadow:\n    2px 2px 0 #000,\n    -1px -1px 0 #000,  \n    1px -1px 0 #000,\n    -1px 1px 0 #000,\n     1px 1px 0 #000;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// D3GeoStatic.vue?765f993a","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div')\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-833fc836\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/D3GeoDoubleLayer.vue\n// module id = 11\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div')\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-b45b0ece\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/D3GeoStatic.vue\n// module id = 12\n// module chunks = 0"],"sourceRoot":""}